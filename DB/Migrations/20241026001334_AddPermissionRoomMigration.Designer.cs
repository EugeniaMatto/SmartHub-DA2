// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHub.DB;

#nullable disable

namespace SmartHub.DB.Migrations
{
    [DbContext(typeof(SmartHubAPIContext))]
    [Migration("20241026001334_AddPermissionRoomMigration")]
    partial class AddPermissionRoomMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LogoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Domain.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotosJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Devices", (string)null);

                    b.HasDiscriminator<string>("DeviceType").HasValue("Device");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Hardware", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HardwareType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("HomeId");

                    b.ToTable("Hardwares", (string)null);

                    b.HasDiscriminator<string>("HardwareType").HasValue("Hardware");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rooms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("Domain.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Seen")
                        .HasColumnType("bit");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HardwareId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.NotificationMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationMembers");
                });

            modelBuilder.Entity("Domain.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("67a49969-f32f-43db-b9a3-b3943bc711ac"),
                            Name = "getnotifications-notification"
                        },
                        new
                        {
                            Id = new Guid("210dcfb5-85fc-488f-a828-d2d00d2d0674"),
                            Name = "open-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("54a33aac-4450-47ad-b646-245398ef10d4"),
                            Name = "close-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("1a3d526f-72af-40be-8a6f-60606e655df7"),
                            Name = "motiondetection-camera"
                        },
                        new
                        {
                            Id = new Guid("bfbdbfd4-a49f-489c-966b-dc08cc9a37db"),
                            Name = "persondetection-camera"
                        },
                        new
                        {
                            Id = new Guid("cc805e85-fcf3-4095-81b2-7b4525d8dc5f"),
                            Name = "getdevices-devices"
                        },
                        new
                        {
                            Id = new Guid("07c83ee8-96d6-4cb7-ad78-3e56a58e8db4"),
                            Name = "getdevicetypes-devicetype"
                        },
                        new
                        {
                            Id = new Guid("dd3e05c4-f3e3-4bb7-a066-f8066c6c1945"),
                            Name = "motiondetection-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("30d745b2-c43a-4ba9-8f49-28c359315ef0"),
                            Name = "on-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("f0313212-b989-470f-85dd-f28b422de02d"),
                            Name = "off-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("1a8333ac-1fc0-406d-8359-1c09fb864d32"),
                            Name = "createcompany-companies"
                        },
                        new
                        {
                            Id = new Guid("b94139f3-020a-4139-911e-bd7c0464867b"),
                            Name = "addsensor-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("31642eed-ff18-42a8-b869-552619a2413e"),
                            Name = "addmotionsensor-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("b75fdb13-5f6b-4fff-8306-8d6a1619740b"),
                            Name = "addcamera-camera"
                        },
                        new
                        {
                            Id = new Guid("52ce6ca7-2bc6-4a60-b184-457fe2623dd2"),
                            Name = "addhomeownerpermission-homeowner"
                        },
                        new
                        {
                            Id = new Guid("f036e516-5bef-47ab-9c8e-40779f6d5854"),
                            Name = "addsmartlamp-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("616356a4-3bda-402b-83ad-015076c94bd5"),
                            Name = "createadminaccount-administrator"
                        },
                        new
                        {
                            Id = new Guid("4922f975-5b10-4167-add3-9317376f40e5"),
                            Name = "deleteadminaccount-administrator"
                        },
                        new
                        {
                            Id = new Guid("224031ee-106d-4a04-ab60-a69430dcd5f1"),
                            Name = "createcompanyowneraccount-companyowner"
                        },
                        new
                        {
                            Id = new Guid("4be6f4be-4916-443c-ab5c-9dcf71b44a16"),
                            Name = "getaccounts-accounts"
                        },
                        new
                        {
                            Id = new Guid("50453f7b-9f4e-46ff-9519-590425912ab2"),
                            Name = "getcompany-companies"
                        },
                        new
                        {
                            Id = new Guid("a6d19f5a-7431-47c1-8536-f11919e9a5dc"),
                            Name = "addhomeownerpermission-homeowner"
                        },
                        new
                        {
                            Id = new Guid("4a71791f-7767-4fd3-8214-954d2bd777e2"),
                            Name = "getrooms-home"
                        },
                        new
                        {
                            Id = new Guid("023edc93-00a2-4a58-ba97-c6975b938679"),
                            Name = "newhome-home"
                        },
                        new
                        {
                            Id = new Guid("d17deb6c-4157-47be-a7aa-130f6ceab8d2"),
                            Name = "addmember-members"
                        },
                        new
                        {
                            Id = new Guid("1c3e1850-fdb7-4bb5-8311-0d78ef6bd612"),
                            Name = "adddevice-home"
                        },
                        new
                        {
                            Id = new Guid("082c1a76-04f4-4bde-a7bc-02489abac1e6"),
                            Name = "getmembers-members"
                        },
                        new
                        {
                            Id = new Guid("eacfe38a-059f-4c80-9085-b3d53b6994ad"),
                            Name = "getdevices-home"
                        },
                        new
                        {
                            Id = new Guid("a0d6c11e-a23a-4bea-8eae-c2e16fb6d483"),
                            Name = "addnotificationmembers-members"
                        },
                        new
                        {
                            Id = new Guid("849e21e5-574f-420a-88a6-ce3722db0458"),
                            Name = "updatenamedevice-home"
                        },
                        new
                        {
                            Id = new Guid("1fe5019d-9a8b-481a-afaa-25dd4e618721"),
                            Name = "addmotionsensor-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("b2de97aa-8f11-4322-9308-3cbe8ec6572d"),
                            Name = "gethomes-user"
                        },
                        new
                        {
                            Id = new Guid("de885b9b-5be0-4bd7-850c-3e702dba4cde"),
                            Name = "addpermission-members"
                        });
                });

            modelBuilder.Entity("Domain.SessionUser", b =>
                {
                    b.Property<Guid>("Token")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Token");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("45a88862-a739-4878-aeed-aa9325e7c6d1"),
                            CreatedAt = new DateTime(2024, 10, 25, 21, 13, 33, 484, DateTimeKind.Local).AddTicks(8763),
                            Email = "rogerfederer@tennis.com",
                            Name = "Roger",
                            Password = "Federer@123",
                            ProfilePhoto = "federer.jpg",
                            Roles = "[0]",
                            Surname = "Federer"
                        },
                        new
                        {
                            Id = new Guid("31f9d350-ce1b-4328-8e67-3f17d1f0b8a8"),
                            CreatedAt = new DateTime(2024, 10, 25, 21, 13, 33, 484, DateTimeKind.Local).AddTicks(8784),
                            Email = "rafaelnadal@tennis.com",
                            Name = "Rafael",
                            Password = "Nadal@123",
                            ProfilePhoto = "nadal.jpg",
                            Roles = "[0]",
                            Surname = "Nadal"
                        },
                        new
                        {
                            Id = new Guid("5e216bc3-2853-4659-b513-02a1d42dfd0e"),
                            CreatedAt = new DateTime(2024, 10, 25, 21, 13, 33, 484, DateTimeKind.Local).AddTicks(8788),
                            Email = "serenawilliams@tennis.com",
                            Name = "Serena",
                            Password = "Serena@123",
                            ProfilePhoto = "serena.jpg",
                            Roles = "[2]",
                            Surname = "Williams"
                        },
                        new
                        {
                            Id = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8"),
                            CreatedAt = new DateTime(2024, 10, 25, 21, 13, 33, 484, DateTimeKind.Local).AddTicks(8792),
                            Email = "novakdjokovic@tennis.com",
                            Name = "Novak",
                            Password = "Djokovic@123",
                            ProfilePhoto = "djokovic.jpg",
                            Roles = "[2,1]",
                            Surname = "Djokovic"
                        },
                        new
                        {
                            Id = new Guid("05d872d7-7aa4-4bc5-a666-3b6757d0bf97"),
                            CreatedAt = new DateTime(2024, 10, 25, 21, 13, 33, 484, DateTimeKind.Local).AddTicks(8796),
                            Email = "steffigraf@tennis.com",
                            Name = "Steffi",
                            Password = "Steffi@123",
                            ProfilePhoto = "graf.jpg",
                            Roles = "[1]",
                            Surname = "Graf"
                        },
                        new
                        {
                            Id = new Guid("d8d5f9eb-306d-4edd-901f-b9c783700332"),
                            CreatedAt = new DateTime(2024, 10, 25, 21, 13, 33, 484, DateTimeKind.Local).AddTicks(8800),
                            Email = "andreagassi@tennis.com",
                            Name = "Andre",
                            Password = "Agassi@123",
                            ProfilePhoto = "agassi.jpg",
                            Roles = "[1]",
                            Surname = "Agassi"
                        },
                        new
                        {
                            Id = new Guid("0186c6b8-4fff-445b-bfc6-e6db7f7d9b1d"),
                            CreatedAt = new DateTime(2024, 10, 25, 21, 13, 33, 484, DateTimeKind.Local).AddTicks(8803),
                            Email = "petesampras@tennis.com",
                            Name = "Pete",
                            Password = "Sampras@123",
                            ProfilePhoto = "sampras.jpg",
                            Roles = "[1]",
                            Surname = "Sampras"
                        },
                        new
                        {
                            Id = new Guid("8d87a3a3-8657-4ae5-b871-62276f683d82"),
                            CreatedAt = new DateTime(2024, 10, 25, 21, 13, 33, 484, DateTimeKind.Local).AddTicks(8810),
                            Email = "martinanavratilova@tennis.com",
                            Name = "Martina",
                            Password = "Navratilova@123",
                            ProfilePhoto = "navratilova.jpg",
                            Roles = "[1]",
                            Surname = "Navratilova"
                        },
                        new
                        {
                            Id = new Guid("7493b1a3-9874-450e-b0b0-3292819a4bae"),
                            CreatedAt = new DateTime(2024, 10, 25, 21, 13, 33, 484, DateTimeKind.Local).AddTicks(8814),
                            Email = "johnmcenroe@tennis.com",
                            Name = "John",
                            Password = "McEnroe@123",
                            ProfilePhoto = "mcenroe.jpg",
                            Roles = "[2]",
                            Surname = "McEnroe"
                        },
                        new
                        {
                            Id = new Guid("eaf67869-b56b-45dd-9ff9-38e3899d4f73"),
                            CreatedAt = new DateTime(2024, 10, 25, 21, 13, 33, 484, DateTimeKind.Local).AddTicks(8842),
                            Email = "billiejeanking@tennis.com",
                            Name = "Billie",
                            Password = "King@123",
                            ProfilePhoto = "king.jpg",
                            Roles = "[0]",
                            Surname = "Jean King"
                        });
                });

            modelBuilder.Entity("Domain.UserHomePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHomePermissions");
                });

            modelBuilder.Entity("Domain.UserPermissions", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions", (string)null);

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("1a8333ac-1fc0-406d-8359-1c09fb864d32"),
                            UserId = new Guid("45a88862-a739-4878-aeed-aa9325e7c6d1")
                        },
                        new
                        {
                            PermissionId = new Guid("b94139f3-020a-4139-911e-bd7c0464867b"),
                            UserId = new Guid("45a88862-a739-4878-aeed-aa9325e7c6d1")
                        },
                        new
                        {
                            PermissionId = new Guid("31642eed-ff18-42a8-b869-552619a2413e"),
                            UserId = new Guid("45a88862-a739-4878-aeed-aa9325e7c6d1")
                        },
                        new
                        {
                            PermissionId = new Guid("b75fdb13-5f6b-4fff-8306-8d6a1619740b"),
                            UserId = new Guid("45a88862-a739-4878-aeed-aa9325e7c6d1")
                        },
                        new
                        {
                            PermissionId = new Guid("52ce6ca7-2bc6-4a60-b184-457fe2623dd2"),
                            UserId = new Guid("45a88862-a739-4878-aeed-aa9325e7c6d1")
                        },
                        new
                        {
                            PermissionId = new Guid("f036e516-5bef-47ab-9c8e-40779f6d5854"),
                            UserId = new Guid("45a88862-a739-4878-aeed-aa9325e7c6d1")
                        },
                        new
                        {
                            PermissionId = new Guid("1a8333ac-1fc0-406d-8359-1c09fb864d32"),
                            UserId = new Guid("31f9d350-ce1b-4328-8e67-3f17d1f0b8a8")
                        },
                        new
                        {
                            PermissionId = new Guid("b94139f3-020a-4139-911e-bd7c0464867b"),
                            UserId = new Guid("31f9d350-ce1b-4328-8e67-3f17d1f0b8a8")
                        },
                        new
                        {
                            PermissionId = new Guid("31642eed-ff18-42a8-b869-552619a2413e"),
                            UserId = new Guid("31f9d350-ce1b-4328-8e67-3f17d1f0b8a8")
                        },
                        new
                        {
                            PermissionId = new Guid("b75fdb13-5f6b-4fff-8306-8d6a1619740b"),
                            UserId = new Guid("31f9d350-ce1b-4328-8e67-3f17d1f0b8a8")
                        },
                        new
                        {
                            PermissionId = new Guid("52ce6ca7-2bc6-4a60-b184-457fe2623dd2"),
                            UserId = new Guid("31f9d350-ce1b-4328-8e67-3f17d1f0b8a8")
                        },
                        new
                        {
                            PermissionId = new Guid("f036e516-5bef-47ab-9c8e-40779f6d5854"),
                            UserId = new Guid("31f9d350-ce1b-4328-8e67-3f17d1f0b8a8")
                        },
                        new
                        {
                            PermissionId = new Guid("616356a4-3bda-402b-83ad-015076c94bd5"),
                            UserId = new Guid("5e216bc3-2853-4659-b513-02a1d42dfd0e")
                        },
                        new
                        {
                            PermissionId = new Guid("4922f975-5b10-4167-add3-9317376f40e5"),
                            UserId = new Guid("5e216bc3-2853-4659-b513-02a1d42dfd0e")
                        },
                        new
                        {
                            PermissionId = new Guid("224031ee-106d-4a04-ab60-a69430dcd5f1"),
                            UserId = new Guid("5e216bc3-2853-4659-b513-02a1d42dfd0e")
                        },
                        new
                        {
                            PermissionId = new Guid("4be6f4be-4916-443c-ab5c-9dcf71b44a16"),
                            UserId = new Guid("5e216bc3-2853-4659-b513-02a1d42dfd0e")
                        },
                        new
                        {
                            PermissionId = new Guid("50453f7b-9f4e-46ff-9519-590425912ab2"),
                            UserId = new Guid("5e216bc3-2853-4659-b513-02a1d42dfd0e")
                        },
                        new
                        {
                            PermissionId = new Guid("a6d19f5a-7431-47c1-8536-f11919e9a5dc"),
                            UserId = new Guid("5e216bc3-2853-4659-b513-02a1d42dfd0e")
                        },
                        new
                        {
                            PermissionId = new Guid("616356a4-3bda-402b-83ad-015076c94bd5"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("4922f975-5b10-4167-add3-9317376f40e5"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("224031ee-106d-4a04-ab60-a69430dcd5f1"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("4be6f4be-4916-443c-ab5c-9dcf71b44a16"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("50453f7b-9f4e-46ff-9519-590425912ab2"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("a6d19f5a-7431-47c1-8536-f11919e9a5dc"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("4a71791f-7767-4fd3-8214-954d2bd777e2"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("023edc93-00a2-4a58-ba97-c6975b938679"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("d17deb6c-4157-47be-a7aa-130f6ceab8d2"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("1c3e1850-fdb7-4bb5-8311-0d78ef6bd612"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("082c1a76-04f4-4bde-a7bc-02489abac1e6"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("eacfe38a-059f-4c80-9085-b3d53b6994ad"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("a0d6c11e-a23a-4bea-8eae-c2e16fb6d483"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("849e21e5-574f-420a-88a6-ce3722db0458"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("1fe5019d-9a8b-481a-afaa-25dd4e618721"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("b2de97aa-8f11-4322-9308-3cbe8ec6572d"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("de885b9b-5be0-4bd7-850c-3e702dba4cde"),
                            UserId = new Guid("ee0699d5-97ed-475b-99ad-45349a8b33f8")
                        },
                        new
                        {
                            PermissionId = new Guid("4a71791f-7767-4fd3-8214-954d2bd777e2"),
                            UserId = new Guid("05d872d7-7aa4-4bc5-a666-3b6757d0bf97")
                        },
                        new
                        {
                            PermissionId = new Guid("023edc93-00a2-4a58-ba97-c6975b938679"),
                            UserId = new Guid("05d872d7-7aa4-4bc5-a666-3b6757d0bf97")
                        },
                        new
                        {
                            PermissionId = new Guid("d17deb6c-4157-47be-a7aa-130f6ceab8d2"),
                            UserId = new Guid("05d872d7-7aa4-4bc5-a666-3b6757d0bf97")
                        },
                        new
                        {
                            PermissionId = new Guid("1c3e1850-fdb7-4bb5-8311-0d78ef6bd612"),
                            UserId = new Guid("05d872d7-7aa4-4bc5-a666-3b6757d0bf97")
                        },
                        new
                        {
                            PermissionId = new Guid("082c1a76-04f4-4bde-a7bc-02489abac1e6"),
                            UserId = new Guid("05d872d7-7aa4-4bc5-a666-3b6757d0bf97")
                        },
                        new
                        {
                            PermissionId = new Guid("eacfe38a-059f-4c80-9085-b3d53b6994ad"),
                            UserId = new Guid("05d872d7-7aa4-4bc5-a666-3b6757d0bf97")
                        },
                        new
                        {
                            PermissionId = new Guid("a0d6c11e-a23a-4bea-8eae-c2e16fb6d483"),
                            UserId = new Guid("05d872d7-7aa4-4bc5-a666-3b6757d0bf97")
                        },
                        new
                        {
                            PermissionId = new Guid("849e21e5-574f-420a-88a6-ce3722db0458"),
                            UserId = new Guid("05d872d7-7aa4-4bc5-a666-3b6757d0bf97")
                        },
                        new
                        {
                            PermissionId = new Guid("1fe5019d-9a8b-481a-afaa-25dd4e618721"),
                            UserId = new Guid("05d872d7-7aa4-4bc5-a666-3b6757d0bf97")
                        },
                        new
                        {
                            PermissionId = new Guid("b2de97aa-8f11-4322-9308-3cbe8ec6572d"),
                            UserId = new Guid("05d872d7-7aa4-4bc5-a666-3b6757d0bf97")
                        },
                        new
                        {
                            PermissionId = new Guid("de885b9b-5be0-4bd7-850c-3e702dba4cde"),
                            UserId = new Guid("05d872d7-7aa4-4bc5-a666-3b6757d0bf97")
                        },
                        new
                        {
                            PermissionId = new Guid("4a71791f-7767-4fd3-8214-954d2bd777e2"),
                            UserId = new Guid("d8d5f9eb-306d-4edd-901f-b9c783700332")
                        },
                        new
                        {
                            PermissionId = new Guid("023edc93-00a2-4a58-ba97-c6975b938679"),
                            UserId = new Guid("d8d5f9eb-306d-4edd-901f-b9c783700332")
                        },
                        new
                        {
                            PermissionId = new Guid("d17deb6c-4157-47be-a7aa-130f6ceab8d2"),
                            UserId = new Guid("d8d5f9eb-306d-4edd-901f-b9c783700332")
                        },
                        new
                        {
                            PermissionId = new Guid("1c3e1850-fdb7-4bb5-8311-0d78ef6bd612"),
                            UserId = new Guid("d8d5f9eb-306d-4edd-901f-b9c783700332")
                        },
                        new
                        {
                            PermissionId = new Guid("082c1a76-04f4-4bde-a7bc-02489abac1e6"),
                            UserId = new Guid("d8d5f9eb-306d-4edd-901f-b9c783700332")
                        },
                        new
                        {
                            PermissionId = new Guid("eacfe38a-059f-4c80-9085-b3d53b6994ad"),
                            UserId = new Guid("d8d5f9eb-306d-4edd-901f-b9c783700332")
                        },
                        new
                        {
                            PermissionId = new Guid("a0d6c11e-a23a-4bea-8eae-c2e16fb6d483"),
                            UserId = new Guid("d8d5f9eb-306d-4edd-901f-b9c783700332")
                        },
                        new
                        {
                            PermissionId = new Guid("849e21e5-574f-420a-88a6-ce3722db0458"),
                            UserId = new Guid("d8d5f9eb-306d-4edd-901f-b9c783700332")
                        },
                        new
                        {
                            PermissionId = new Guid("1fe5019d-9a8b-481a-afaa-25dd4e618721"),
                            UserId = new Guid("d8d5f9eb-306d-4edd-901f-b9c783700332")
                        },
                        new
                        {
                            PermissionId = new Guid("b2de97aa-8f11-4322-9308-3cbe8ec6572d"),
                            UserId = new Guid("d8d5f9eb-306d-4edd-901f-b9c783700332")
                        },
                        new
                        {
                            PermissionId = new Guid("de885b9b-5be0-4bd7-850c-3e702dba4cde"),
                            UserId = new Guid("d8d5f9eb-306d-4edd-901f-b9c783700332")
                        },
                        new
                        {
                            PermissionId = new Guid("4a71791f-7767-4fd3-8214-954d2bd777e2"),
                            UserId = new Guid("0186c6b8-4fff-445b-bfc6-e6db7f7d9b1d")
                        },
                        new
                        {
                            PermissionId = new Guid("023edc93-00a2-4a58-ba97-c6975b938679"),
                            UserId = new Guid("0186c6b8-4fff-445b-bfc6-e6db7f7d9b1d")
                        },
                        new
                        {
                            PermissionId = new Guid("d17deb6c-4157-47be-a7aa-130f6ceab8d2"),
                            UserId = new Guid("0186c6b8-4fff-445b-bfc6-e6db7f7d9b1d")
                        },
                        new
                        {
                            PermissionId = new Guid("1c3e1850-fdb7-4bb5-8311-0d78ef6bd612"),
                            UserId = new Guid("0186c6b8-4fff-445b-bfc6-e6db7f7d9b1d")
                        },
                        new
                        {
                            PermissionId = new Guid("082c1a76-04f4-4bde-a7bc-02489abac1e6"),
                            UserId = new Guid("0186c6b8-4fff-445b-bfc6-e6db7f7d9b1d")
                        },
                        new
                        {
                            PermissionId = new Guid("eacfe38a-059f-4c80-9085-b3d53b6994ad"),
                            UserId = new Guid("0186c6b8-4fff-445b-bfc6-e6db7f7d9b1d")
                        },
                        new
                        {
                            PermissionId = new Guid("a0d6c11e-a23a-4bea-8eae-c2e16fb6d483"),
                            UserId = new Guid("0186c6b8-4fff-445b-bfc6-e6db7f7d9b1d")
                        },
                        new
                        {
                            PermissionId = new Guid("849e21e5-574f-420a-88a6-ce3722db0458"),
                            UserId = new Guid("0186c6b8-4fff-445b-bfc6-e6db7f7d9b1d")
                        },
                        new
                        {
                            PermissionId = new Guid("1fe5019d-9a8b-481a-afaa-25dd4e618721"),
                            UserId = new Guid("0186c6b8-4fff-445b-bfc6-e6db7f7d9b1d")
                        },
                        new
                        {
                            PermissionId = new Guid("b2de97aa-8f11-4322-9308-3cbe8ec6572d"),
                            UserId = new Guid("0186c6b8-4fff-445b-bfc6-e6db7f7d9b1d")
                        },
                        new
                        {
                            PermissionId = new Guid("de885b9b-5be0-4bd7-850c-3e702dba4cde"),
                            UserId = new Guid("0186c6b8-4fff-445b-bfc6-e6db7f7d9b1d")
                        },
                        new
                        {
                            PermissionId = new Guid("4a71791f-7767-4fd3-8214-954d2bd777e2"),
                            UserId = new Guid("8d87a3a3-8657-4ae5-b871-62276f683d82")
                        },
                        new
                        {
                            PermissionId = new Guid("023edc93-00a2-4a58-ba97-c6975b938679"),
                            UserId = new Guid("8d87a3a3-8657-4ae5-b871-62276f683d82")
                        },
                        new
                        {
                            PermissionId = new Guid("d17deb6c-4157-47be-a7aa-130f6ceab8d2"),
                            UserId = new Guid("8d87a3a3-8657-4ae5-b871-62276f683d82")
                        },
                        new
                        {
                            PermissionId = new Guid("1c3e1850-fdb7-4bb5-8311-0d78ef6bd612"),
                            UserId = new Guid("8d87a3a3-8657-4ae5-b871-62276f683d82")
                        },
                        new
                        {
                            PermissionId = new Guid("082c1a76-04f4-4bde-a7bc-02489abac1e6"),
                            UserId = new Guid("8d87a3a3-8657-4ae5-b871-62276f683d82")
                        },
                        new
                        {
                            PermissionId = new Guid("eacfe38a-059f-4c80-9085-b3d53b6994ad"),
                            UserId = new Guid("8d87a3a3-8657-4ae5-b871-62276f683d82")
                        },
                        new
                        {
                            PermissionId = new Guid("a0d6c11e-a23a-4bea-8eae-c2e16fb6d483"),
                            UserId = new Guid("8d87a3a3-8657-4ae5-b871-62276f683d82")
                        },
                        new
                        {
                            PermissionId = new Guid("849e21e5-574f-420a-88a6-ce3722db0458"),
                            UserId = new Guid("8d87a3a3-8657-4ae5-b871-62276f683d82")
                        },
                        new
                        {
                            PermissionId = new Guid("1fe5019d-9a8b-481a-afaa-25dd4e618721"),
                            UserId = new Guid("8d87a3a3-8657-4ae5-b871-62276f683d82")
                        },
                        new
                        {
                            PermissionId = new Guid("b2de97aa-8f11-4322-9308-3cbe8ec6572d"),
                            UserId = new Guid("8d87a3a3-8657-4ae5-b871-62276f683d82")
                        },
                        new
                        {
                            PermissionId = new Guid("de885b9b-5be0-4bd7-850c-3e702dba4cde"),
                            UserId = new Guid("8d87a3a3-8657-4ae5-b871-62276f683d82")
                        },
                        new
                        {
                            PermissionId = new Guid("616356a4-3bda-402b-83ad-015076c94bd5"),
                            UserId = new Guid("7493b1a3-9874-450e-b0b0-3292819a4bae")
                        },
                        new
                        {
                            PermissionId = new Guid("4922f975-5b10-4167-add3-9317376f40e5"),
                            UserId = new Guid("7493b1a3-9874-450e-b0b0-3292819a4bae")
                        },
                        new
                        {
                            PermissionId = new Guid("224031ee-106d-4a04-ab60-a69430dcd5f1"),
                            UserId = new Guid("7493b1a3-9874-450e-b0b0-3292819a4bae")
                        },
                        new
                        {
                            PermissionId = new Guid("4be6f4be-4916-443c-ab5c-9dcf71b44a16"),
                            UserId = new Guid("7493b1a3-9874-450e-b0b0-3292819a4bae")
                        },
                        new
                        {
                            PermissionId = new Guid("50453f7b-9f4e-46ff-9519-590425912ab2"),
                            UserId = new Guid("7493b1a3-9874-450e-b0b0-3292819a4bae")
                        },
                        new
                        {
                            PermissionId = new Guid("a6d19f5a-7431-47c1-8536-f11919e9a5dc"),
                            UserId = new Guid("7493b1a3-9874-450e-b0b0-3292819a4bae")
                        },
                        new
                        {
                            PermissionId = new Guid("1a8333ac-1fc0-406d-8359-1c09fb864d32"),
                            UserId = new Guid("eaf67869-b56b-45dd-9ff9-38e3899d4f73")
                        },
                        new
                        {
                            PermissionId = new Guid("b94139f3-020a-4139-911e-bd7c0464867b"),
                            UserId = new Guid("eaf67869-b56b-45dd-9ff9-38e3899d4f73")
                        },
                        new
                        {
                            PermissionId = new Guid("31642eed-ff18-42a8-b869-552619a2413e"),
                            UserId = new Guid("eaf67869-b56b-45dd-9ff9-38e3899d4f73")
                        },
                        new
                        {
                            PermissionId = new Guid("b75fdb13-5f6b-4fff-8306-8d6a1619740b"),
                            UserId = new Guid("eaf67869-b56b-45dd-9ff9-38e3899d4f73")
                        },
                        new
                        {
                            PermissionId = new Guid("52ce6ca7-2bc6-4a60-b184-457fe2623dd2"),
                            UserId = new Guid("eaf67869-b56b-45dd-9ff9-38e3899d4f73")
                        },
                        new
                        {
                            PermissionId = new Guid("f036e516-5bef-47ab-9c8e-40779f6d5854"),
                            UserId = new Guid("eaf67869-b56b-45dd-9ff9-38e3899d4f73")
                        });
                });

            modelBuilder.Entity("Domain.SecurityCam", b =>
                {
                    b.HasBaseType("Domain.Device");

                    b.Property<string>("CamSupportedActionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CamSupportedActionsJson");

                    b.Property<string>("UseTypeJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UseTypeJson");

                    b.HasDiscriminator().HasValue("SecurityCam");
                });

            modelBuilder.Entity("Domain.SmartLampHardware", b =>
                {
                    b.HasBaseType("Domain.Hardware");

                    b.Property<bool>("IsOn")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("SmartLamp");
                });

            modelBuilder.Entity("Domain.WindowSensorHardware", b =>
                {
                    b.HasBaseType("Domain.Hardware");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("WindowSensor");
                });

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.HasOne("Domain.User", "Owner")
                        .WithOne()
                        .HasForeignKey("Domain.Company", "OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Domain.Device", b =>
                {
                    b.HasOne("Domain.Company", "Company")
                        .WithMany("Devices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Domain.Hardware", b =>
                {
                    b.HasOne("Domain.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Home", "Home")
                        .WithMany("Devices")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Home");
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.HasOne("Domain.User", "Owner")
                        .WithMany("OwnedHomes")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Domain.UbicationGeo", "Ubication", b1 =>
                        {
                            b1.Property<Guid>("HomeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("Lat")
                                .HasColumnType("int");

                            b1.Property<int?>("Lon")
                                .HasColumnType("int");

                            b1.HasKey("HomeId");

                            b1.ToTable("Homes");

                            b1.WithOwner()
                                .HasForeignKey("HomeId");
                        });

                    b.Navigation("Owner");

                    b.Navigation("Ubication")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Notification", b =>
                {
                    b.HasOne("Domain.Hardware", "Hardware")
                        .WithMany()
                        .HasForeignKey("HardwareId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hardware");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.NotificationMember", b =>
                {
                    b.HasOne("Domain.Home", "Home")
                        .WithMany("NotificationMembers")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.SessionUser", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserHomePermission", b =>
                {
                    b.HasOne("Domain.Home", "Home")
                        .WithMany("Members")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("HomePermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserPermissions", b =>
                {
                    b.HasOne("Domain.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Members");

                    b.Navigation("NotificationMembers");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Navigation("HomePermissions");

                    b.Navigation("OwnedHomes");
                });
#pragma warning restore 612, 618
        }
    }
}
