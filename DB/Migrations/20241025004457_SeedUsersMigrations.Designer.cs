// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHub.DB;

#nullable disable

namespace SmartHub.DB.Migrations
{
    [DbContext(typeof(SmartHubAPIContext))]
    [Migration("20241025004457_SeedUsersMigrations")]
    partial class SeedUsersMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LogoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Domain.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotosJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Devices", (string)null);

                    b.HasDiscriminator<string>("DeviceType").HasValue("Device");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Hardware", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HardwareType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("HomeId");

                    b.ToTable("Hardwares", (string)null);

                    b.HasDiscriminator<string>("HardwareType").HasValue("Hardware");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("Domain.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Seen")
                        .HasColumnType("bit");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HardwareId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.NotificationMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationMembers");
                });

            modelBuilder.Entity("Domain.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f918d86-97c6-4931-8aac-a020ee223be7"),
                            Name = "getnotifications-notification"
                        },
                        new
                        {
                            Id = new Guid("2f52f473-4535-49b1-b187-544c487017ea"),
                            Name = "open-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("d8aae869-3da9-4ed7-864d-16cba076d030"),
                            Name = "close-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("4cf7df27-f09b-40f9-9e18-f6eb0083266a"),
                            Name = "motiondetection-camera"
                        },
                        new
                        {
                            Id = new Guid("86aa671c-e40e-457e-94b2-ec5b06b0050c"),
                            Name = "persondetection-camera"
                        },
                        new
                        {
                            Id = new Guid("1daa72b4-c992-49be-bb3a-1cdec8d83bcc"),
                            Name = "getdevices-devices"
                        },
                        new
                        {
                            Id = new Guid("b049944b-8703-44b0-9496-bedc49a4d27f"),
                            Name = "getdevicetypes-devicetype"
                        },
                        new
                        {
                            Id = new Guid("db709097-0761-4987-bb60-2b92b506c0ce"),
                            Name = "motiondetection-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("5d59bf73-6a58-419e-8c4e-da91c7aa4da1"),
                            Name = "on-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("bcc72968-945f-46d3-bdbf-883a2d50b174"),
                            Name = "off-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("5a759b54-cfb0-4d76-84fa-0a0d5e02d49c"),
                            Name = "createcompany-companies"
                        },
                        new
                        {
                            Id = new Guid("cb257bfa-4a08-4c84-b5c1-b62b25b4b900"),
                            Name = "addsensor-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("c01d65af-d033-4461-9c17-f852c7cfac31"),
                            Name = "addmotionsensor-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("51079df2-9e33-42b4-b036-fa7ca910a389"),
                            Name = "addcamera-camera"
                        },
                        new
                        {
                            Id = new Guid("b68703af-b7fc-42db-8fe8-b96bc4ff6eed"),
                            Name = "addhomeownerpermission-homeowner"
                        },
                        new
                        {
                            Id = new Guid("097c6a9c-a088-4609-a87d-28f41f0037a8"),
                            Name = "addsmartlamp-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("9aef3b5e-c20f-4447-b328-237bd492d3a2"),
                            Name = "createadminaccount-administrator"
                        },
                        new
                        {
                            Id = new Guid("5d68ce10-bafa-4a4e-9924-92746dd836ba"),
                            Name = "deleteadminaccount-administrator"
                        },
                        new
                        {
                            Id = new Guid("f2a2964f-d437-427d-9a60-29dd11826c59"),
                            Name = "createcompanyowneraccount-companyowner"
                        },
                        new
                        {
                            Id = new Guid("86daad74-b654-46a0-a828-88f1caa8e916"),
                            Name = "getaccounts-accounts"
                        },
                        new
                        {
                            Id = new Guid("7d5a71ca-1c6e-4bd0-aef8-ae80a30071e5"),
                            Name = "getcompany-companies"
                        },
                        new
                        {
                            Id = new Guid("3e752bda-417c-4e8b-9880-2d7c0390fedb"),
                            Name = "addhomeownerpermission-homeowner"
                        },
                        new
                        {
                            Id = new Guid("6f1dacc1-41ac-4bdd-9003-fa4b603ed464"),
                            Name = "newhome-home"
                        },
                        new
                        {
                            Id = new Guid("5f4151ef-1fbd-4e74-9b74-29572d848ac8"),
                            Name = "addmember-members"
                        },
                        new
                        {
                            Id = new Guid("ecc85e36-ef44-410e-bb8c-d6cef66b38ac"),
                            Name = "adddevice-home"
                        },
                        new
                        {
                            Id = new Guid("cd35650c-f847-4684-8a1d-a6f816c1a79e"),
                            Name = "getmembers-members"
                        },
                        new
                        {
                            Id = new Guid("7d9f0272-2c49-4a7c-a11d-c51053664feb"),
                            Name = "getdevices-home"
                        },
                        new
                        {
                            Id = new Guid("bf049bd6-427d-468c-95d1-7ba39eb213d7"),
                            Name = "addnotificationmembers-members"
                        },
                        new
                        {
                            Id = new Guid("28120997-bbcf-4e84-9264-f334f32455c7"),
                            Name = "updatenamedevice-home"
                        },
                        new
                        {
                            Id = new Guid("439bd59f-22d2-4796-b200-1c0e55169110"),
                            Name = "addmotionsensor-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("e37179a5-5ecd-45a8-a1e9-65565ad16aad"),
                            Name = "gethomes-user"
                        },
                        new
                        {
                            Id = new Guid("90e84acf-9eb4-4ccc-95f1-2f0343543c2c"),
                            Name = "addpermission-members"
                        });
                });

            modelBuilder.Entity("Domain.SessionUser", b =>
                {
                    b.Property<Guid>("Token")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Token");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RolesJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6e4d48f-4481-4333-9390-f9f17cccff0f"),
                            CreatedAt = new DateTime(2024, 10, 24, 21, 44, 56, 447, DateTimeKind.Local).AddTicks(105),
                            Email = "rogerfederer@tennis.com",
                            Name = "Roger",
                            Password = "Federer@123",
                            ProfilePhoto = "federer.jpg",
                            RolesJson = "[0]",
                            Surname = "Federer"
                        },
                        new
                        {
                            Id = new Guid("f2afd291-d368-4b90-9451-0d9d7f0046f0"),
                            CreatedAt = new DateTime(2024, 10, 24, 21, 44, 56, 447, DateTimeKind.Local).AddTicks(322),
                            Email = "rafaelnadal@tennis.com",
                            Name = "Rafael",
                            Password = "Nadal@123",
                            ProfilePhoto = "nadal.jpg",
                            RolesJson = "[0]",
                            Surname = "Nadal"
                        },
                        new
                        {
                            Id = new Guid("b854bbd2-78f0-49d6-906b-97caeeb45e6c"),
                            CreatedAt = new DateTime(2024, 10, 24, 21, 44, 56, 447, DateTimeKind.Local).AddTicks(340),
                            Email = "serenawilliams@tennis.com",
                            Name = "Serena",
                            Password = "Serena@123",
                            ProfilePhoto = "serena.jpg",
                            RolesJson = "[2]",
                            Surname = "Williams"
                        },
                        new
                        {
                            Id = new Guid("206b6b90-f67d-4c75-bb70-7aca5b8c6d94"),
                            CreatedAt = new DateTime(2024, 10, 24, 21, 44, 56, 447, DateTimeKind.Local).AddTicks(353),
                            Email = "novakdjokovic@tennis.com",
                            Name = "Novak",
                            Password = "Djokovic@123",
                            ProfilePhoto = "djokovic.jpg",
                            RolesJson = "[2]",
                            Surname = "Djokovic"
                        },
                        new
                        {
                            Id = new Guid("705d203c-e015-4699-b10e-adbac5712927"),
                            CreatedAt = new DateTime(2024, 10, 24, 21, 44, 56, 447, DateTimeKind.Local).AddTicks(363),
                            Email = "steffigraf@tennis.com",
                            Name = "Steffi",
                            Password = "Steffi@123",
                            ProfilePhoto = "graf.jpg",
                            RolesJson = "[1]",
                            Surname = "Graf"
                        },
                        new
                        {
                            Id = new Guid("d04994b2-980b-4bf6-b9e0-9179f078b003"),
                            CreatedAt = new DateTime(2024, 10, 24, 21, 44, 56, 447, DateTimeKind.Local).AddTicks(374),
                            Email = "andreagassi@tennis.com",
                            Name = "Andre",
                            Password = "Agassi@123",
                            ProfilePhoto = "agassi.jpg",
                            RolesJson = "[1]",
                            Surname = "Agassi"
                        });
                });

            modelBuilder.Entity("Domain.UserHomePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHomePermissions");
                });

            modelBuilder.Entity("Domain.UserPermissions", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions", (string)null);

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("5a759b54-cfb0-4d76-84fa-0a0d5e02d49c"),
                            UserId = new Guid("a6e4d48f-4481-4333-9390-f9f17cccff0f")
                        },
                        new
                        {
                            PermissionId = new Guid("cb257bfa-4a08-4c84-b5c1-b62b25b4b900"),
                            UserId = new Guid("a6e4d48f-4481-4333-9390-f9f17cccff0f")
                        },
                        new
                        {
                            PermissionId = new Guid("c01d65af-d033-4461-9c17-f852c7cfac31"),
                            UserId = new Guid("a6e4d48f-4481-4333-9390-f9f17cccff0f")
                        },
                        new
                        {
                            PermissionId = new Guid("51079df2-9e33-42b4-b036-fa7ca910a389"),
                            UserId = new Guid("a6e4d48f-4481-4333-9390-f9f17cccff0f")
                        },
                        new
                        {
                            PermissionId = new Guid("b68703af-b7fc-42db-8fe8-b96bc4ff6eed"),
                            UserId = new Guid("a6e4d48f-4481-4333-9390-f9f17cccff0f")
                        },
                        new
                        {
                            PermissionId = new Guid("097c6a9c-a088-4609-a87d-28f41f0037a8"),
                            UserId = new Guid("a6e4d48f-4481-4333-9390-f9f17cccff0f")
                        },
                        new
                        {
                            PermissionId = new Guid("5a759b54-cfb0-4d76-84fa-0a0d5e02d49c"),
                            UserId = new Guid("f2afd291-d368-4b90-9451-0d9d7f0046f0")
                        },
                        new
                        {
                            PermissionId = new Guid("cb257bfa-4a08-4c84-b5c1-b62b25b4b900"),
                            UserId = new Guid("f2afd291-d368-4b90-9451-0d9d7f0046f0")
                        },
                        new
                        {
                            PermissionId = new Guid("c01d65af-d033-4461-9c17-f852c7cfac31"),
                            UserId = new Guid("f2afd291-d368-4b90-9451-0d9d7f0046f0")
                        },
                        new
                        {
                            PermissionId = new Guid("51079df2-9e33-42b4-b036-fa7ca910a389"),
                            UserId = new Guid("f2afd291-d368-4b90-9451-0d9d7f0046f0")
                        },
                        new
                        {
                            PermissionId = new Guid("b68703af-b7fc-42db-8fe8-b96bc4ff6eed"),
                            UserId = new Guid("f2afd291-d368-4b90-9451-0d9d7f0046f0")
                        },
                        new
                        {
                            PermissionId = new Guid("097c6a9c-a088-4609-a87d-28f41f0037a8"),
                            UserId = new Guid("f2afd291-d368-4b90-9451-0d9d7f0046f0")
                        },
                        new
                        {
                            PermissionId = new Guid("9aef3b5e-c20f-4447-b328-237bd492d3a2"),
                            UserId = new Guid("b854bbd2-78f0-49d6-906b-97caeeb45e6c")
                        },
                        new
                        {
                            PermissionId = new Guid("5d68ce10-bafa-4a4e-9924-92746dd836ba"),
                            UserId = new Guid("b854bbd2-78f0-49d6-906b-97caeeb45e6c")
                        },
                        new
                        {
                            PermissionId = new Guid("f2a2964f-d437-427d-9a60-29dd11826c59"),
                            UserId = new Guid("b854bbd2-78f0-49d6-906b-97caeeb45e6c")
                        },
                        new
                        {
                            PermissionId = new Guid("86daad74-b654-46a0-a828-88f1caa8e916"),
                            UserId = new Guid("b854bbd2-78f0-49d6-906b-97caeeb45e6c")
                        },
                        new
                        {
                            PermissionId = new Guid("7d5a71ca-1c6e-4bd0-aef8-ae80a30071e5"),
                            UserId = new Guid("b854bbd2-78f0-49d6-906b-97caeeb45e6c")
                        },
                        new
                        {
                            PermissionId = new Guid("3e752bda-417c-4e8b-9880-2d7c0390fedb"),
                            UserId = new Guid("b854bbd2-78f0-49d6-906b-97caeeb45e6c")
                        },
                        new
                        {
                            PermissionId = new Guid("9aef3b5e-c20f-4447-b328-237bd492d3a2"),
                            UserId = new Guid("206b6b90-f67d-4c75-bb70-7aca5b8c6d94")
                        },
                        new
                        {
                            PermissionId = new Guid("5d68ce10-bafa-4a4e-9924-92746dd836ba"),
                            UserId = new Guid("206b6b90-f67d-4c75-bb70-7aca5b8c6d94")
                        },
                        new
                        {
                            PermissionId = new Guid("f2a2964f-d437-427d-9a60-29dd11826c59"),
                            UserId = new Guid("206b6b90-f67d-4c75-bb70-7aca5b8c6d94")
                        },
                        new
                        {
                            PermissionId = new Guid("86daad74-b654-46a0-a828-88f1caa8e916"),
                            UserId = new Guid("206b6b90-f67d-4c75-bb70-7aca5b8c6d94")
                        },
                        new
                        {
                            PermissionId = new Guid("7d5a71ca-1c6e-4bd0-aef8-ae80a30071e5"),
                            UserId = new Guid("206b6b90-f67d-4c75-bb70-7aca5b8c6d94")
                        },
                        new
                        {
                            PermissionId = new Guid("3e752bda-417c-4e8b-9880-2d7c0390fedb"),
                            UserId = new Guid("206b6b90-f67d-4c75-bb70-7aca5b8c6d94")
                        },
                        new
                        {
                            PermissionId = new Guid("6f1dacc1-41ac-4bdd-9003-fa4b603ed464"),
                            UserId = new Guid("705d203c-e015-4699-b10e-adbac5712927")
                        },
                        new
                        {
                            PermissionId = new Guid("5f4151ef-1fbd-4e74-9b74-29572d848ac8"),
                            UserId = new Guid("705d203c-e015-4699-b10e-adbac5712927")
                        },
                        new
                        {
                            PermissionId = new Guid("ecc85e36-ef44-410e-bb8c-d6cef66b38ac"),
                            UserId = new Guid("705d203c-e015-4699-b10e-adbac5712927")
                        },
                        new
                        {
                            PermissionId = new Guid("cd35650c-f847-4684-8a1d-a6f816c1a79e"),
                            UserId = new Guid("705d203c-e015-4699-b10e-adbac5712927")
                        },
                        new
                        {
                            PermissionId = new Guid("7d9f0272-2c49-4a7c-a11d-c51053664feb"),
                            UserId = new Guid("705d203c-e015-4699-b10e-adbac5712927")
                        },
                        new
                        {
                            PermissionId = new Guid("bf049bd6-427d-468c-95d1-7ba39eb213d7"),
                            UserId = new Guid("705d203c-e015-4699-b10e-adbac5712927")
                        },
                        new
                        {
                            PermissionId = new Guid("28120997-bbcf-4e84-9264-f334f32455c7"),
                            UserId = new Guid("705d203c-e015-4699-b10e-adbac5712927")
                        },
                        new
                        {
                            PermissionId = new Guid("439bd59f-22d2-4796-b200-1c0e55169110"),
                            UserId = new Guid("705d203c-e015-4699-b10e-adbac5712927")
                        },
                        new
                        {
                            PermissionId = new Guid("e37179a5-5ecd-45a8-a1e9-65565ad16aad"),
                            UserId = new Guid("705d203c-e015-4699-b10e-adbac5712927")
                        },
                        new
                        {
                            PermissionId = new Guid("90e84acf-9eb4-4ccc-95f1-2f0343543c2c"),
                            UserId = new Guid("705d203c-e015-4699-b10e-adbac5712927")
                        },
                        new
                        {
                            PermissionId = new Guid("6f1dacc1-41ac-4bdd-9003-fa4b603ed464"),
                            UserId = new Guid("d04994b2-980b-4bf6-b9e0-9179f078b003")
                        },
                        new
                        {
                            PermissionId = new Guid("5f4151ef-1fbd-4e74-9b74-29572d848ac8"),
                            UserId = new Guid("d04994b2-980b-4bf6-b9e0-9179f078b003")
                        },
                        new
                        {
                            PermissionId = new Guid("ecc85e36-ef44-410e-bb8c-d6cef66b38ac"),
                            UserId = new Guid("d04994b2-980b-4bf6-b9e0-9179f078b003")
                        },
                        new
                        {
                            PermissionId = new Guid("cd35650c-f847-4684-8a1d-a6f816c1a79e"),
                            UserId = new Guid("d04994b2-980b-4bf6-b9e0-9179f078b003")
                        },
                        new
                        {
                            PermissionId = new Guid("7d9f0272-2c49-4a7c-a11d-c51053664feb"),
                            UserId = new Guid("d04994b2-980b-4bf6-b9e0-9179f078b003")
                        },
                        new
                        {
                            PermissionId = new Guid("bf049bd6-427d-468c-95d1-7ba39eb213d7"),
                            UserId = new Guid("d04994b2-980b-4bf6-b9e0-9179f078b003")
                        },
                        new
                        {
                            PermissionId = new Guid("28120997-bbcf-4e84-9264-f334f32455c7"),
                            UserId = new Guid("d04994b2-980b-4bf6-b9e0-9179f078b003")
                        },
                        new
                        {
                            PermissionId = new Guid("439bd59f-22d2-4796-b200-1c0e55169110"),
                            UserId = new Guid("d04994b2-980b-4bf6-b9e0-9179f078b003")
                        },
                        new
                        {
                            PermissionId = new Guid("e37179a5-5ecd-45a8-a1e9-65565ad16aad"),
                            UserId = new Guid("d04994b2-980b-4bf6-b9e0-9179f078b003")
                        },
                        new
                        {
                            PermissionId = new Guid("90e84acf-9eb4-4ccc-95f1-2f0343543c2c"),
                            UserId = new Guid("d04994b2-980b-4bf6-b9e0-9179f078b003")
                        });
                });

            modelBuilder.Entity("Domain.SecurityCam", b =>
                {
                    b.HasBaseType("Domain.Device");

                    b.Property<string>("CamSupportedActionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CamSupportedActionsJson");

                    b.Property<string>("UseTypeJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UseTypeJson");

                    b.HasDiscriminator().HasValue("SecurityCam");
                });

            modelBuilder.Entity("Domain.SmartLampHardware", b =>
                {
                    b.HasBaseType("Domain.Hardware");

                    b.Property<bool>("IsOn")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("SmartLamp");
                });

            modelBuilder.Entity("Domain.WindowSensorHardware", b =>
                {
                    b.HasBaseType("Domain.Hardware");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("WindowSensor");
                });

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.HasOne("Domain.User", "Owner")
                        .WithOne()
                        .HasForeignKey("Domain.Company", "OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Domain.Device", b =>
                {
                    b.HasOne("Domain.Company", "Company")
                        .WithMany("Devices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Domain.Hardware", b =>
                {
                    b.HasOne("Domain.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Home", "Home")
                        .WithMany("Devices")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Home");
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.HasOne("Domain.User", "Owner")
                        .WithMany("OwnedHomes")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Domain.UbicationGeo", "Ubication", b1 =>
                        {
                            b1.Property<Guid>("HomeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("Lat")
                                .HasColumnType("int");

                            b1.Property<int?>("Lon")
                                .HasColumnType("int");

                            b1.HasKey("HomeId");

                            b1.ToTable("Homes");

                            b1.WithOwner()
                                .HasForeignKey("HomeId");
                        });

                    b.Navigation("Owner");

                    b.Navigation("Ubication")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Notification", b =>
                {
                    b.HasOne("Domain.Hardware", "Hardware")
                        .WithMany()
                        .HasForeignKey("HardwareId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hardware");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.NotificationMember", b =>
                {
                    b.HasOne("Domain.Home", "Home")
                        .WithMany("NotificationMembers")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.SessionUser", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserHomePermission", b =>
                {
                    b.HasOne("Domain.Home", "Home")
                        .WithMany("Members")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("HomePermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserPermissions", b =>
                {
                    b.HasOne("Domain.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Members");

                    b.Navigation("NotificationMembers");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Navigation("HomePermissions");

                    b.Navigation("OwnedHomes");
                });
#pragma warning restore 612, 618
        }
    }
}
