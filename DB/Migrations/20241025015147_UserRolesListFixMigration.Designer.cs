// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHub.DB;

#nullable disable

namespace SmartHub.DB.Migrations
{
    [DbContext(typeof(SmartHubAPIContext))]
    [Migration("20241025015147_UserRolesListFixMigration")]
    partial class UserRolesListFixMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LogoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Domain.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotosJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Devices", (string)null);

                    b.HasDiscriminator<string>("DeviceType").HasValue("Device");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Hardware", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HardwareType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("HomeId");

                    b.ToTable("Hardwares", (string)null);

                    b.HasDiscriminator<string>("HardwareType").HasValue("Hardware");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("Domain.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Seen")
                        .HasColumnType("bit");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HardwareId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.NotificationMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationMembers");
                });

            modelBuilder.Entity("Domain.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf32e499-9273-442e-a24d-02e9cdff661b"),
                            Name = "getnotifications-notification"
                        },
                        new
                        {
                            Id = new Guid("66959cf0-cfed-4233-ac4c-804fa4053de4"),
                            Name = "open-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("fba8c000-ae56-4553-84bf-074f8203ea2e"),
                            Name = "close-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("289fec6f-c275-4e0e-99ea-579d0683b2bd"),
                            Name = "motiondetection-camera"
                        },
                        new
                        {
                            Id = new Guid("dd709dd0-8622-4be9-91d6-7caa74401274"),
                            Name = "persondetection-camera"
                        },
                        new
                        {
                            Id = new Guid("fcf63289-25b3-4b61-875f-a5b03019aebc"),
                            Name = "getdevices-devices"
                        },
                        new
                        {
                            Id = new Guid("4c707a82-4a63-4268-a5da-1bf02e47d5cb"),
                            Name = "getdevicetypes-devicetype"
                        },
                        new
                        {
                            Id = new Guid("b56fc959-b137-4a3e-8568-a1e3d6780f76"),
                            Name = "motiondetection-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("5123fed4-a1ff-474b-ab15-968cf8df548c"),
                            Name = "on-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("33b4df56-f80a-4fdf-a56d-641e8618d82b"),
                            Name = "off-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("38de2f19-2fea-45aa-b5b5-8e6f9da90e7c"),
                            Name = "createcompany-companies"
                        },
                        new
                        {
                            Id = new Guid("99308808-b55f-47d9-b12b-c3e263b00950"),
                            Name = "addsensor-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("f3c7b6a5-c9f4-4f70-97a8-a0295f4e6583"),
                            Name = "addmotionsensor-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("7fb62486-1e62-43e4-a54c-f0233fd1475e"),
                            Name = "addcamera-camera"
                        },
                        new
                        {
                            Id = new Guid("323bf644-c3ef-4501-a82d-acb809957cf4"),
                            Name = "addhomeownerpermission-homeowner"
                        },
                        new
                        {
                            Id = new Guid("d3db3dc6-5fd1-4a0f-a3e0-54ac1a10ece2"),
                            Name = "addsmartlamp-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("95d87f22-defb-4f47-ae38-3e9bc59cda9d"),
                            Name = "createadminaccount-administrator"
                        },
                        new
                        {
                            Id = new Guid("f227705b-71b0-474c-a7cf-c171ca619e43"),
                            Name = "deleteadminaccount-administrator"
                        },
                        new
                        {
                            Id = new Guid("c9f74d67-1b13-4809-ac9b-1cc3d0fd2df6"),
                            Name = "createcompanyowneraccount-companyowner"
                        },
                        new
                        {
                            Id = new Guid("3b2f8dbb-bcc1-42cd-ba77-72afa1d822ca"),
                            Name = "getaccounts-accounts"
                        },
                        new
                        {
                            Id = new Guid("6c700d87-3219-440e-885a-b8b3447ce33f"),
                            Name = "getcompany-companies"
                        },
                        new
                        {
                            Id = new Guid("bf908216-0341-49e7-983f-4cfc8a48b618"),
                            Name = "addhomeownerpermission-homeowner"
                        },
                        new
                        {
                            Id = new Guid("23fd915f-864a-42f3-8061-ac79961e3145"),
                            Name = "newhome-home"
                        },
                        new
                        {
                            Id = new Guid("d433b8e4-f1f3-4640-b501-3178c04d919d"),
                            Name = "addmember-members"
                        },
                        new
                        {
                            Id = new Guid("eb2df1eb-53d8-4f14-9eab-240d00ed92dd"),
                            Name = "adddevice-home"
                        },
                        new
                        {
                            Id = new Guid("c68e57bf-acbe-4139-8b9b-aeb23d08e7d9"),
                            Name = "getmembers-members"
                        },
                        new
                        {
                            Id = new Guid("e6de765d-c4ae-4ac1-bc6e-ec5f133fc3e0"),
                            Name = "getdevices-home"
                        },
                        new
                        {
                            Id = new Guid("b6dac8a5-0e9e-4fda-8cbf-2086a6e74b87"),
                            Name = "addnotificationmembers-members"
                        },
                        new
                        {
                            Id = new Guid("c7328610-86fa-4668-bbd0-8a6dfca4a993"),
                            Name = "updatenamedevice-home"
                        },
                        new
                        {
                            Id = new Guid("f6a4816f-7b1d-417b-87b4-b72bcb6aea44"),
                            Name = "addmotionsensor-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("e8bde265-a646-4eb9-b8d7-78384ff2786d"),
                            Name = "gethomes-user"
                        },
                        new
                        {
                            Id = new Guid("6519bab1-5296-4ef4-bfe7-aa7b90fcd5ee"),
                            Name = "addpermission-members"
                        });
                });

            modelBuilder.Entity("Domain.SessionUser", b =>
                {
                    b.Property<Guid>("Token")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Token");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8617ac23-695a-4640-af73-1c4840ad4459"),
                            CreatedAt = new DateTime(2024, 10, 24, 22, 51, 47, 276, DateTimeKind.Local).AddTicks(2344),
                            Email = "rogerfederer@tennis.com",
                            Name = "Roger",
                            Password = "Federer@123",
                            ProfilePhoto = "federer.jpg",
                            Roles = "[0]",
                            Surname = "Federer"
                        },
                        new
                        {
                            Id = new Guid("62b0117d-1b24-4edd-9fd7-43708e0ad725"),
                            CreatedAt = new DateTime(2024, 10, 24, 22, 51, 47, 276, DateTimeKind.Local).AddTicks(2368),
                            Email = "rafaelnadal@tennis.com",
                            Name = "Rafael",
                            Password = "Nadal@123",
                            ProfilePhoto = "nadal.jpg",
                            Roles = "[0]",
                            Surname = "Nadal"
                        },
                        new
                        {
                            Id = new Guid("8f103d97-fb04-496e-9274-5b69100325bb"),
                            CreatedAt = new DateTime(2024, 10, 24, 22, 51, 47, 276, DateTimeKind.Local).AddTicks(2373),
                            Email = "serenawilliams@tennis.com",
                            Name = "Serena",
                            Password = "Serena@123",
                            ProfilePhoto = "serena.jpg",
                            Roles = "[2]",
                            Surname = "Williams"
                        },
                        new
                        {
                            Id = new Guid("b927e1d7-c63b-4ca4-901d-4198edfa742a"),
                            CreatedAt = new DateTime(2024, 10, 24, 22, 51, 47, 276, DateTimeKind.Local).AddTicks(2376),
                            Email = "novakdjokovic@tennis.com",
                            Name = "Novak",
                            Password = "Djokovic@123",
                            ProfilePhoto = "djokovic.jpg",
                            Roles = "[2]",
                            Surname = "Djokovic"
                        },
                        new
                        {
                            Id = new Guid("29a26908-80ea-4bc4-86eb-5d0acb11f4fe"),
                            CreatedAt = new DateTime(2024, 10, 24, 22, 51, 47, 276, DateTimeKind.Local).AddTicks(2380),
                            Email = "steffigraf@tennis.com",
                            Name = "Steffi",
                            Password = "Steffi@123",
                            ProfilePhoto = "graf.jpg",
                            Roles = "[1]",
                            Surname = "Graf"
                        },
                        new
                        {
                            Id = new Guid("05b85637-fe5b-42b8-a951-d197ea65b9d7"),
                            CreatedAt = new DateTime(2024, 10, 24, 22, 51, 47, 276, DateTimeKind.Local).AddTicks(2414),
                            Email = "andreagassi@tennis.com",
                            Name = "Andre",
                            Password = "Agassi@123",
                            ProfilePhoto = "agassi.jpg",
                            Roles = "[1]",
                            Surname = "Agassi"
                        });
                });

            modelBuilder.Entity("Domain.UserHomePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHomePermissions");
                });

            modelBuilder.Entity("Domain.UserPermissions", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions", (string)null);

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("38de2f19-2fea-45aa-b5b5-8e6f9da90e7c"),
                            UserId = new Guid("8617ac23-695a-4640-af73-1c4840ad4459")
                        },
                        new
                        {
                            PermissionId = new Guid("99308808-b55f-47d9-b12b-c3e263b00950"),
                            UserId = new Guid("8617ac23-695a-4640-af73-1c4840ad4459")
                        },
                        new
                        {
                            PermissionId = new Guid("f3c7b6a5-c9f4-4f70-97a8-a0295f4e6583"),
                            UserId = new Guid("8617ac23-695a-4640-af73-1c4840ad4459")
                        },
                        new
                        {
                            PermissionId = new Guid("7fb62486-1e62-43e4-a54c-f0233fd1475e"),
                            UserId = new Guid("8617ac23-695a-4640-af73-1c4840ad4459")
                        },
                        new
                        {
                            PermissionId = new Guid("323bf644-c3ef-4501-a82d-acb809957cf4"),
                            UserId = new Guid("8617ac23-695a-4640-af73-1c4840ad4459")
                        },
                        new
                        {
                            PermissionId = new Guid("d3db3dc6-5fd1-4a0f-a3e0-54ac1a10ece2"),
                            UserId = new Guid("8617ac23-695a-4640-af73-1c4840ad4459")
                        },
                        new
                        {
                            PermissionId = new Guid("38de2f19-2fea-45aa-b5b5-8e6f9da90e7c"),
                            UserId = new Guid("62b0117d-1b24-4edd-9fd7-43708e0ad725")
                        },
                        new
                        {
                            PermissionId = new Guid("99308808-b55f-47d9-b12b-c3e263b00950"),
                            UserId = new Guid("62b0117d-1b24-4edd-9fd7-43708e0ad725")
                        },
                        new
                        {
                            PermissionId = new Guid("f3c7b6a5-c9f4-4f70-97a8-a0295f4e6583"),
                            UserId = new Guid("62b0117d-1b24-4edd-9fd7-43708e0ad725")
                        },
                        new
                        {
                            PermissionId = new Guid("7fb62486-1e62-43e4-a54c-f0233fd1475e"),
                            UserId = new Guid("62b0117d-1b24-4edd-9fd7-43708e0ad725")
                        },
                        new
                        {
                            PermissionId = new Guid("323bf644-c3ef-4501-a82d-acb809957cf4"),
                            UserId = new Guid("62b0117d-1b24-4edd-9fd7-43708e0ad725")
                        },
                        new
                        {
                            PermissionId = new Guid("d3db3dc6-5fd1-4a0f-a3e0-54ac1a10ece2"),
                            UserId = new Guid("62b0117d-1b24-4edd-9fd7-43708e0ad725")
                        },
                        new
                        {
                            PermissionId = new Guid("95d87f22-defb-4f47-ae38-3e9bc59cda9d"),
                            UserId = new Guid("8f103d97-fb04-496e-9274-5b69100325bb")
                        },
                        new
                        {
                            PermissionId = new Guid("f227705b-71b0-474c-a7cf-c171ca619e43"),
                            UserId = new Guid("8f103d97-fb04-496e-9274-5b69100325bb")
                        },
                        new
                        {
                            PermissionId = new Guid("c9f74d67-1b13-4809-ac9b-1cc3d0fd2df6"),
                            UserId = new Guid("8f103d97-fb04-496e-9274-5b69100325bb")
                        },
                        new
                        {
                            PermissionId = new Guid("3b2f8dbb-bcc1-42cd-ba77-72afa1d822ca"),
                            UserId = new Guid("8f103d97-fb04-496e-9274-5b69100325bb")
                        },
                        new
                        {
                            PermissionId = new Guid("6c700d87-3219-440e-885a-b8b3447ce33f"),
                            UserId = new Guid("8f103d97-fb04-496e-9274-5b69100325bb")
                        },
                        new
                        {
                            PermissionId = new Guid("bf908216-0341-49e7-983f-4cfc8a48b618"),
                            UserId = new Guid("8f103d97-fb04-496e-9274-5b69100325bb")
                        },
                        new
                        {
                            PermissionId = new Guid("95d87f22-defb-4f47-ae38-3e9bc59cda9d"),
                            UserId = new Guid("b927e1d7-c63b-4ca4-901d-4198edfa742a")
                        },
                        new
                        {
                            PermissionId = new Guid("f227705b-71b0-474c-a7cf-c171ca619e43"),
                            UserId = new Guid("b927e1d7-c63b-4ca4-901d-4198edfa742a")
                        },
                        new
                        {
                            PermissionId = new Guid("c9f74d67-1b13-4809-ac9b-1cc3d0fd2df6"),
                            UserId = new Guid("b927e1d7-c63b-4ca4-901d-4198edfa742a")
                        },
                        new
                        {
                            PermissionId = new Guid("3b2f8dbb-bcc1-42cd-ba77-72afa1d822ca"),
                            UserId = new Guid("b927e1d7-c63b-4ca4-901d-4198edfa742a")
                        },
                        new
                        {
                            PermissionId = new Guid("6c700d87-3219-440e-885a-b8b3447ce33f"),
                            UserId = new Guid("b927e1d7-c63b-4ca4-901d-4198edfa742a")
                        },
                        new
                        {
                            PermissionId = new Guid("bf908216-0341-49e7-983f-4cfc8a48b618"),
                            UserId = new Guid("b927e1d7-c63b-4ca4-901d-4198edfa742a")
                        },
                        new
                        {
                            PermissionId = new Guid("23fd915f-864a-42f3-8061-ac79961e3145"),
                            UserId = new Guid("29a26908-80ea-4bc4-86eb-5d0acb11f4fe")
                        },
                        new
                        {
                            PermissionId = new Guid("d433b8e4-f1f3-4640-b501-3178c04d919d"),
                            UserId = new Guid("29a26908-80ea-4bc4-86eb-5d0acb11f4fe")
                        },
                        new
                        {
                            PermissionId = new Guid("eb2df1eb-53d8-4f14-9eab-240d00ed92dd"),
                            UserId = new Guid("29a26908-80ea-4bc4-86eb-5d0acb11f4fe")
                        },
                        new
                        {
                            PermissionId = new Guid("c68e57bf-acbe-4139-8b9b-aeb23d08e7d9"),
                            UserId = new Guid("29a26908-80ea-4bc4-86eb-5d0acb11f4fe")
                        },
                        new
                        {
                            PermissionId = new Guid("e6de765d-c4ae-4ac1-bc6e-ec5f133fc3e0"),
                            UserId = new Guid("29a26908-80ea-4bc4-86eb-5d0acb11f4fe")
                        },
                        new
                        {
                            PermissionId = new Guid("b6dac8a5-0e9e-4fda-8cbf-2086a6e74b87"),
                            UserId = new Guid("29a26908-80ea-4bc4-86eb-5d0acb11f4fe")
                        },
                        new
                        {
                            PermissionId = new Guid("c7328610-86fa-4668-bbd0-8a6dfca4a993"),
                            UserId = new Guid("29a26908-80ea-4bc4-86eb-5d0acb11f4fe")
                        },
                        new
                        {
                            PermissionId = new Guid("f6a4816f-7b1d-417b-87b4-b72bcb6aea44"),
                            UserId = new Guid("29a26908-80ea-4bc4-86eb-5d0acb11f4fe")
                        },
                        new
                        {
                            PermissionId = new Guid("e8bde265-a646-4eb9-b8d7-78384ff2786d"),
                            UserId = new Guid("29a26908-80ea-4bc4-86eb-5d0acb11f4fe")
                        },
                        new
                        {
                            PermissionId = new Guid("6519bab1-5296-4ef4-bfe7-aa7b90fcd5ee"),
                            UserId = new Guid("29a26908-80ea-4bc4-86eb-5d0acb11f4fe")
                        },
                        new
                        {
                            PermissionId = new Guid("23fd915f-864a-42f3-8061-ac79961e3145"),
                            UserId = new Guid("05b85637-fe5b-42b8-a951-d197ea65b9d7")
                        },
                        new
                        {
                            PermissionId = new Guid("d433b8e4-f1f3-4640-b501-3178c04d919d"),
                            UserId = new Guid("05b85637-fe5b-42b8-a951-d197ea65b9d7")
                        },
                        new
                        {
                            PermissionId = new Guid("eb2df1eb-53d8-4f14-9eab-240d00ed92dd"),
                            UserId = new Guid("05b85637-fe5b-42b8-a951-d197ea65b9d7")
                        },
                        new
                        {
                            PermissionId = new Guid("c68e57bf-acbe-4139-8b9b-aeb23d08e7d9"),
                            UserId = new Guid("05b85637-fe5b-42b8-a951-d197ea65b9d7")
                        },
                        new
                        {
                            PermissionId = new Guid("e6de765d-c4ae-4ac1-bc6e-ec5f133fc3e0"),
                            UserId = new Guid("05b85637-fe5b-42b8-a951-d197ea65b9d7")
                        },
                        new
                        {
                            PermissionId = new Guid("b6dac8a5-0e9e-4fda-8cbf-2086a6e74b87"),
                            UserId = new Guid("05b85637-fe5b-42b8-a951-d197ea65b9d7")
                        },
                        new
                        {
                            PermissionId = new Guid("c7328610-86fa-4668-bbd0-8a6dfca4a993"),
                            UserId = new Guid("05b85637-fe5b-42b8-a951-d197ea65b9d7")
                        },
                        new
                        {
                            PermissionId = new Guid("f6a4816f-7b1d-417b-87b4-b72bcb6aea44"),
                            UserId = new Guid("05b85637-fe5b-42b8-a951-d197ea65b9d7")
                        },
                        new
                        {
                            PermissionId = new Guid("e8bde265-a646-4eb9-b8d7-78384ff2786d"),
                            UserId = new Guid("05b85637-fe5b-42b8-a951-d197ea65b9d7")
                        },
                        new
                        {
                            PermissionId = new Guid("6519bab1-5296-4ef4-bfe7-aa7b90fcd5ee"),
                            UserId = new Guid("05b85637-fe5b-42b8-a951-d197ea65b9d7")
                        });
                });

            modelBuilder.Entity("Domain.SecurityCam", b =>
                {
                    b.HasBaseType("Domain.Device");

                    b.Property<string>("CamSupportedActionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CamSupportedActionsJson");

                    b.Property<string>("UseTypeJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UseTypeJson");

                    b.HasDiscriminator().HasValue("SecurityCam");
                });

            modelBuilder.Entity("Domain.SmartLampHardware", b =>
                {
                    b.HasBaseType("Domain.Hardware");

                    b.Property<bool>("IsOn")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("SmartLamp");
                });

            modelBuilder.Entity("Domain.WindowSensorHardware", b =>
                {
                    b.HasBaseType("Domain.Hardware");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("WindowSensor");
                });

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.HasOne("Domain.User", "Owner")
                        .WithOne()
                        .HasForeignKey("Domain.Company", "OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Domain.Device", b =>
                {
                    b.HasOne("Domain.Company", "Company")
                        .WithMany("Devices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Domain.Hardware", b =>
                {
                    b.HasOne("Domain.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Home", "Home")
                        .WithMany("Devices")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Home");
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.HasOne("Domain.User", "Owner")
                        .WithMany("OwnedHomes")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Domain.UbicationGeo", "Ubication", b1 =>
                        {
                            b1.Property<Guid>("HomeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("Lat")
                                .HasColumnType("int");

                            b1.Property<int?>("Lon")
                                .HasColumnType("int");

                            b1.HasKey("HomeId");

                            b1.ToTable("Homes");

                            b1.WithOwner()
                                .HasForeignKey("HomeId");
                        });

                    b.Navigation("Owner");

                    b.Navigation("Ubication")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Notification", b =>
                {
                    b.HasOne("Domain.Hardware", "Hardware")
                        .WithMany()
                        .HasForeignKey("HardwareId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hardware");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.NotificationMember", b =>
                {
                    b.HasOne("Domain.Home", "Home")
                        .WithMany("NotificationMembers")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.SessionUser", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserHomePermission", b =>
                {
                    b.HasOne("Domain.Home", "Home")
                        .WithMany("Members")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("HomePermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserPermissions", b =>
                {
                    b.HasOne("Domain.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Members");

                    b.Navigation("NotificationMembers");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Navigation("HomePermissions");

                    b.Navigation("OwnedHomes");
                });
#pragma warning restore 612, 618
        }
    }
}
