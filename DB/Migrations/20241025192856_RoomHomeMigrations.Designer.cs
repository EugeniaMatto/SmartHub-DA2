// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHub.DB;

#nullable disable

namespace SmartHub.DB.Migrations
{
    [DbContext(typeof(SmartHubAPIContext))]
    [Migration("20241025192856_RoomHomeMigrations")]
    partial class RoomHomeMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LogoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Domain.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotosJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Devices", (string)null);

                    b.HasDiscriminator<string>("DeviceType").HasValue("Device");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Hardware", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HardwareType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("HomeId");

                    b.ToTable("Hardwares", (string)null);

                    b.HasDiscriminator<string>("HardwareType").HasValue("Hardware");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rooms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("Domain.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Seen")
                        .HasColumnType("bit");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HardwareId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.NotificationMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationMembers");
                });

            modelBuilder.Entity("Domain.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1337bdee-e195-41d4-8d30-20cc44d4db51"),
                            Name = "getnotifications-notification"
                        },
                        new
                        {
                            Id = new Guid("51e0b49c-3590-4e30-a00d-05aca114fdbf"),
                            Name = "open-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("ee1ca303-029b-4ebe-a197-57c5fb38884d"),
                            Name = "close-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("fdd480d1-21e1-4e03-b458-1c1c289d0e1e"),
                            Name = "motiondetection-camera"
                        },
                        new
                        {
                            Id = new Guid("b7fbd728-fa3d-4727-b1cd-50a089da148a"),
                            Name = "persondetection-camera"
                        },
                        new
                        {
                            Id = new Guid("d53ef3aa-99c4-4197-96db-a4629e688b6f"),
                            Name = "getdevices-devices"
                        },
                        new
                        {
                            Id = new Guid("37b3241c-4ae3-4a0f-9796-b3a14a25fbca"),
                            Name = "getdevicetypes-devicetype"
                        },
                        new
                        {
                            Id = new Guid("5e8df53a-15b4-4caa-8306-a44d3bd143a6"),
                            Name = "motiondetection-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("ae2462b7-ca1a-4e1e-8004-7ebc3d133149"),
                            Name = "on-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("648d4378-b89d-4491-8ab6-0d49a485a1dc"),
                            Name = "off-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("fcb3880e-acc2-45d6-89d9-596968611764"),
                            Name = "createcompany-companies"
                        },
                        new
                        {
                            Id = new Guid("5b6f2650-04dc-444a-a212-813a57aaea18"),
                            Name = "addsensor-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("71dd38b8-efab-44b6-b6f7-5572db7ae8b5"),
                            Name = "addmotionsensor-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("ac9ee154-c6c4-4765-a7dd-168d51d96526"),
                            Name = "addcamera-camera"
                        },
                        new
                        {
                            Id = new Guid("52376afd-eb8a-4bd0-9278-d0a6b1c4f164"),
                            Name = "addhomeownerpermission-homeowner"
                        },
                        new
                        {
                            Id = new Guid("6cebc42e-d5f8-44ca-b621-8ecc2b624e73"),
                            Name = "addsmartlamp-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("fd0a6608-dbc7-47ab-b9d9-b446ab08631a"),
                            Name = "createadminaccount-administrator"
                        },
                        new
                        {
                            Id = new Guid("a3ff8ff2-a2e6-459f-9f9e-18642f2a5404"),
                            Name = "deleteadminaccount-administrator"
                        },
                        new
                        {
                            Id = new Guid("06629fc9-d121-4586-bf95-21886f045df1"),
                            Name = "createcompanyowneraccount-companyowner"
                        },
                        new
                        {
                            Id = new Guid("1917ea15-d762-4277-b13a-980a476b1991"),
                            Name = "getaccounts-accounts"
                        },
                        new
                        {
                            Id = new Guid("108c76c1-f352-451a-8464-269053d2d5c5"),
                            Name = "getcompany-companies"
                        },
                        new
                        {
                            Id = new Guid("c05802c7-41da-4d94-a468-0997cfb59f0f"),
                            Name = "addhomeownerpermission-homeowner"
                        },
                        new
                        {
                            Id = new Guid("d15509ee-a5a9-4130-aaf0-b1e8c0ee467d"),
                            Name = "newhome-home"
                        },
                        new
                        {
                            Id = new Guid("23b162c5-7b85-44b4-be86-b46d7fa3be0b"),
                            Name = "addmember-members"
                        },
                        new
                        {
                            Id = new Guid("afc68adc-941f-4ed2-bd49-8c1da98e00b3"),
                            Name = "adddevice-home"
                        },
                        new
                        {
                            Id = new Guid("b1186ef5-6ba9-4818-b724-1cdb58f933ef"),
                            Name = "getmembers-members"
                        },
                        new
                        {
                            Id = new Guid("77da324b-dd05-4c82-bc40-b574d43dc47c"),
                            Name = "getdevices-home"
                        },
                        new
                        {
                            Id = new Guid("fbaf28f1-30ee-4331-9b9a-8035fcabea75"),
                            Name = "addnotificationmembers-members"
                        },
                        new
                        {
                            Id = new Guid("fe5025a4-b6b6-4b26-b421-3626ead715c3"),
                            Name = "updatenamedevice-home"
                        },
                        new
                        {
                            Id = new Guid("e664aec4-5252-4af7-b087-121c96cc12d7"),
                            Name = "addmotionsensor-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("ba998e50-29cc-4039-b8c7-02ccd243af26"),
                            Name = "gethomes-user"
                        },
                        new
                        {
                            Id = new Guid("69e4f819-a5ca-41fd-8775-50d689506332"),
                            Name = "addpermission-members"
                        });
                });

            modelBuilder.Entity("Domain.SessionUser", b =>
                {
                    b.Property<Guid>("Token")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Token");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ec1fd2c-66b3-4009-8e14-89f54d678fe0"),
                            CreatedAt = new DateTime(2024, 10, 25, 16, 28, 55, 734, DateTimeKind.Local).AddTicks(5),
                            Email = "rogerfederer@tennis.com",
                            Name = "Roger",
                            Password = "Federer@123",
                            ProfilePhoto = "federer.jpg",
                            Roles = "[0]",
                            Surname = "Federer"
                        },
                        new
                        {
                            Id = new Guid("33e81783-f4fd-4a60-866c-00f3ba468156"),
                            CreatedAt = new DateTime(2024, 10, 25, 16, 28, 55, 734, DateTimeKind.Local).AddTicks(29),
                            Email = "rafaelnadal@tennis.com",
                            Name = "Rafael",
                            Password = "Nadal@123",
                            ProfilePhoto = "nadal.jpg",
                            Roles = "[0]",
                            Surname = "Nadal"
                        },
                        new
                        {
                            Id = new Guid("656880a2-1494-43c2-925e-da38b3094a57"),
                            CreatedAt = new DateTime(2024, 10, 25, 16, 28, 55, 734, DateTimeKind.Local).AddTicks(34),
                            Email = "serenawilliams@tennis.com",
                            Name = "Serena",
                            Password = "Serena@123",
                            ProfilePhoto = "serena.jpg",
                            Roles = "[2]",
                            Surname = "Williams"
                        },
                        new
                        {
                            Id = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e"),
                            CreatedAt = new DateTime(2024, 10, 25, 16, 28, 55, 734, DateTimeKind.Local).AddTicks(37),
                            Email = "novakdjokovic@tennis.com",
                            Name = "Novak",
                            Password = "Djokovic@123",
                            ProfilePhoto = "djokovic.jpg",
                            Roles = "[2,1]",
                            Surname = "Djokovic"
                        },
                        new
                        {
                            Id = new Guid("ddc53a2e-3c1b-4615-8259-666192a1f49f"),
                            CreatedAt = new DateTime(2024, 10, 25, 16, 28, 55, 734, DateTimeKind.Local).AddTicks(40),
                            Email = "steffigraf@tennis.com",
                            Name = "Steffi",
                            Password = "Steffi@123",
                            ProfilePhoto = "graf.jpg",
                            Roles = "[1]",
                            Surname = "Graf"
                        },
                        new
                        {
                            Id = new Guid("80204bee-54a0-40c5-902d-f4ee20d197a7"),
                            CreatedAt = new DateTime(2024, 10, 25, 16, 28, 55, 734, DateTimeKind.Local).AddTicks(44),
                            Email = "andreagassi@tennis.com",
                            Name = "Andre",
                            Password = "Agassi@123",
                            ProfilePhoto = "agassi.jpg",
                            Roles = "[1]",
                            Surname = "Agassi"
                        },
                        new
                        {
                            Id = new Guid("90a32d8e-de43-47b7-9968-3805cc5abf6c"),
                            CreatedAt = new DateTime(2024, 10, 25, 16, 28, 55, 734, DateTimeKind.Local).AddTicks(47),
                            Email = "petesampras@tennis.com",
                            Name = "Pete",
                            Password = "Sampras@123",
                            ProfilePhoto = "sampras.jpg",
                            Roles = "[1]",
                            Surname = "Sampras"
                        },
                        new
                        {
                            Id = new Guid("d3034edf-f2f2-4311-aec2-290a56dc94b7"),
                            CreatedAt = new DateTime(2024, 10, 25, 16, 28, 55, 734, DateTimeKind.Local).AddTicks(50),
                            Email = "martinanavratilova@tennis.com",
                            Name = "Martina",
                            Password = "Navratilova@123",
                            ProfilePhoto = "navratilova.jpg",
                            Roles = "[1]",
                            Surname = "Navratilova"
                        },
                        new
                        {
                            Id = new Guid("a606a1bd-40eb-4e15-abea-a3d346380288"),
                            CreatedAt = new DateTime(2024, 10, 25, 16, 28, 55, 734, DateTimeKind.Local).AddTicks(56),
                            Email = "johnmcenroe@tennis.com",
                            Name = "John",
                            Password = "McEnroe@123",
                            ProfilePhoto = "mcenroe.jpg",
                            Roles = "[2]",
                            Surname = "McEnroe"
                        },
                        new
                        {
                            Id = new Guid("cadce08d-3e77-469d-baeb-40f5c5f0fd74"),
                            CreatedAt = new DateTime(2024, 10, 25, 16, 28, 55, 734, DateTimeKind.Local).AddTicks(60),
                            Email = "billiejeanking@tennis.com",
                            Name = "Billie",
                            Password = "King@123",
                            ProfilePhoto = "king.jpg",
                            Roles = "[0]",
                            Surname = "Jean King"
                        });
                });

            modelBuilder.Entity("Domain.UserHomePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHomePermissions");
                });

            modelBuilder.Entity("Domain.UserPermissions", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions", (string)null);

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("fcb3880e-acc2-45d6-89d9-596968611764"),
                            UserId = new Guid("9ec1fd2c-66b3-4009-8e14-89f54d678fe0")
                        },
                        new
                        {
                            PermissionId = new Guid("5b6f2650-04dc-444a-a212-813a57aaea18"),
                            UserId = new Guid("9ec1fd2c-66b3-4009-8e14-89f54d678fe0")
                        },
                        new
                        {
                            PermissionId = new Guid("71dd38b8-efab-44b6-b6f7-5572db7ae8b5"),
                            UserId = new Guid("9ec1fd2c-66b3-4009-8e14-89f54d678fe0")
                        },
                        new
                        {
                            PermissionId = new Guid("ac9ee154-c6c4-4765-a7dd-168d51d96526"),
                            UserId = new Guid("9ec1fd2c-66b3-4009-8e14-89f54d678fe0")
                        },
                        new
                        {
                            PermissionId = new Guid("52376afd-eb8a-4bd0-9278-d0a6b1c4f164"),
                            UserId = new Guid("9ec1fd2c-66b3-4009-8e14-89f54d678fe0")
                        },
                        new
                        {
                            PermissionId = new Guid("6cebc42e-d5f8-44ca-b621-8ecc2b624e73"),
                            UserId = new Guid("9ec1fd2c-66b3-4009-8e14-89f54d678fe0")
                        },
                        new
                        {
                            PermissionId = new Guid("fcb3880e-acc2-45d6-89d9-596968611764"),
                            UserId = new Guid("33e81783-f4fd-4a60-866c-00f3ba468156")
                        },
                        new
                        {
                            PermissionId = new Guid("5b6f2650-04dc-444a-a212-813a57aaea18"),
                            UserId = new Guid("33e81783-f4fd-4a60-866c-00f3ba468156")
                        },
                        new
                        {
                            PermissionId = new Guid("71dd38b8-efab-44b6-b6f7-5572db7ae8b5"),
                            UserId = new Guid("33e81783-f4fd-4a60-866c-00f3ba468156")
                        },
                        new
                        {
                            PermissionId = new Guid("ac9ee154-c6c4-4765-a7dd-168d51d96526"),
                            UserId = new Guid("33e81783-f4fd-4a60-866c-00f3ba468156")
                        },
                        new
                        {
                            PermissionId = new Guid("52376afd-eb8a-4bd0-9278-d0a6b1c4f164"),
                            UserId = new Guid("33e81783-f4fd-4a60-866c-00f3ba468156")
                        },
                        new
                        {
                            PermissionId = new Guid("6cebc42e-d5f8-44ca-b621-8ecc2b624e73"),
                            UserId = new Guid("33e81783-f4fd-4a60-866c-00f3ba468156")
                        },
                        new
                        {
                            PermissionId = new Guid("fd0a6608-dbc7-47ab-b9d9-b446ab08631a"),
                            UserId = new Guid("656880a2-1494-43c2-925e-da38b3094a57")
                        },
                        new
                        {
                            PermissionId = new Guid("a3ff8ff2-a2e6-459f-9f9e-18642f2a5404"),
                            UserId = new Guid("656880a2-1494-43c2-925e-da38b3094a57")
                        },
                        new
                        {
                            PermissionId = new Guid("06629fc9-d121-4586-bf95-21886f045df1"),
                            UserId = new Guid("656880a2-1494-43c2-925e-da38b3094a57")
                        },
                        new
                        {
                            PermissionId = new Guid("1917ea15-d762-4277-b13a-980a476b1991"),
                            UserId = new Guid("656880a2-1494-43c2-925e-da38b3094a57")
                        },
                        new
                        {
                            PermissionId = new Guid("108c76c1-f352-451a-8464-269053d2d5c5"),
                            UserId = new Guid("656880a2-1494-43c2-925e-da38b3094a57")
                        },
                        new
                        {
                            PermissionId = new Guid("c05802c7-41da-4d94-a468-0997cfb59f0f"),
                            UserId = new Guid("656880a2-1494-43c2-925e-da38b3094a57")
                        },
                        new
                        {
                            PermissionId = new Guid("fd0a6608-dbc7-47ab-b9d9-b446ab08631a"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("a3ff8ff2-a2e6-459f-9f9e-18642f2a5404"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("06629fc9-d121-4586-bf95-21886f045df1"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("1917ea15-d762-4277-b13a-980a476b1991"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("108c76c1-f352-451a-8464-269053d2d5c5"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("c05802c7-41da-4d94-a468-0997cfb59f0f"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("d15509ee-a5a9-4130-aaf0-b1e8c0ee467d"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("23b162c5-7b85-44b4-be86-b46d7fa3be0b"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("afc68adc-941f-4ed2-bd49-8c1da98e00b3"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("b1186ef5-6ba9-4818-b724-1cdb58f933ef"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("77da324b-dd05-4c82-bc40-b574d43dc47c"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("fbaf28f1-30ee-4331-9b9a-8035fcabea75"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("fe5025a4-b6b6-4b26-b421-3626ead715c3"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("e664aec4-5252-4af7-b087-121c96cc12d7"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("ba998e50-29cc-4039-b8c7-02ccd243af26"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("69e4f819-a5ca-41fd-8775-50d689506332"),
                            UserId = new Guid("0e464fa4-3454-40eb-b1a3-24bec6b2a90e")
                        },
                        new
                        {
                            PermissionId = new Guid("d15509ee-a5a9-4130-aaf0-b1e8c0ee467d"),
                            UserId = new Guid("ddc53a2e-3c1b-4615-8259-666192a1f49f")
                        },
                        new
                        {
                            PermissionId = new Guid("23b162c5-7b85-44b4-be86-b46d7fa3be0b"),
                            UserId = new Guid("ddc53a2e-3c1b-4615-8259-666192a1f49f")
                        },
                        new
                        {
                            PermissionId = new Guid("afc68adc-941f-4ed2-bd49-8c1da98e00b3"),
                            UserId = new Guid("ddc53a2e-3c1b-4615-8259-666192a1f49f")
                        },
                        new
                        {
                            PermissionId = new Guid("b1186ef5-6ba9-4818-b724-1cdb58f933ef"),
                            UserId = new Guid("ddc53a2e-3c1b-4615-8259-666192a1f49f")
                        },
                        new
                        {
                            PermissionId = new Guid("77da324b-dd05-4c82-bc40-b574d43dc47c"),
                            UserId = new Guid("ddc53a2e-3c1b-4615-8259-666192a1f49f")
                        },
                        new
                        {
                            PermissionId = new Guid("fbaf28f1-30ee-4331-9b9a-8035fcabea75"),
                            UserId = new Guid("ddc53a2e-3c1b-4615-8259-666192a1f49f")
                        },
                        new
                        {
                            PermissionId = new Guid("fe5025a4-b6b6-4b26-b421-3626ead715c3"),
                            UserId = new Guid("ddc53a2e-3c1b-4615-8259-666192a1f49f")
                        },
                        new
                        {
                            PermissionId = new Guid("e664aec4-5252-4af7-b087-121c96cc12d7"),
                            UserId = new Guid("ddc53a2e-3c1b-4615-8259-666192a1f49f")
                        },
                        new
                        {
                            PermissionId = new Guid("ba998e50-29cc-4039-b8c7-02ccd243af26"),
                            UserId = new Guid("ddc53a2e-3c1b-4615-8259-666192a1f49f")
                        },
                        new
                        {
                            PermissionId = new Guid("69e4f819-a5ca-41fd-8775-50d689506332"),
                            UserId = new Guid("ddc53a2e-3c1b-4615-8259-666192a1f49f")
                        },
                        new
                        {
                            PermissionId = new Guid("d15509ee-a5a9-4130-aaf0-b1e8c0ee467d"),
                            UserId = new Guid("80204bee-54a0-40c5-902d-f4ee20d197a7")
                        },
                        new
                        {
                            PermissionId = new Guid("23b162c5-7b85-44b4-be86-b46d7fa3be0b"),
                            UserId = new Guid("80204bee-54a0-40c5-902d-f4ee20d197a7")
                        },
                        new
                        {
                            PermissionId = new Guid("afc68adc-941f-4ed2-bd49-8c1da98e00b3"),
                            UserId = new Guid("80204bee-54a0-40c5-902d-f4ee20d197a7")
                        },
                        new
                        {
                            PermissionId = new Guid("b1186ef5-6ba9-4818-b724-1cdb58f933ef"),
                            UserId = new Guid("80204bee-54a0-40c5-902d-f4ee20d197a7")
                        },
                        new
                        {
                            PermissionId = new Guid("77da324b-dd05-4c82-bc40-b574d43dc47c"),
                            UserId = new Guid("80204bee-54a0-40c5-902d-f4ee20d197a7")
                        },
                        new
                        {
                            PermissionId = new Guid("fbaf28f1-30ee-4331-9b9a-8035fcabea75"),
                            UserId = new Guid("80204bee-54a0-40c5-902d-f4ee20d197a7")
                        },
                        new
                        {
                            PermissionId = new Guid("fe5025a4-b6b6-4b26-b421-3626ead715c3"),
                            UserId = new Guid("80204bee-54a0-40c5-902d-f4ee20d197a7")
                        },
                        new
                        {
                            PermissionId = new Guid("e664aec4-5252-4af7-b087-121c96cc12d7"),
                            UserId = new Guid("80204bee-54a0-40c5-902d-f4ee20d197a7")
                        },
                        new
                        {
                            PermissionId = new Guid("ba998e50-29cc-4039-b8c7-02ccd243af26"),
                            UserId = new Guid("80204bee-54a0-40c5-902d-f4ee20d197a7")
                        },
                        new
                        {
                            PermissionId = new Guid("69e4f819-a5ca-41fd-8775-50d689506332"),
                            UserId = new Guid("80204bee-54a0-40c5-902d-f4ee20d197a7")
                        },
                        new
                        {
                            PermissionId = new Guid("d15509ee-a5a9-4130-aaf0-b1e8c0ee467d"),
                            UserId = new Guid("90a32d8e-de43-47b7-9968-3805cc5abf6c")
                        },
                        new
                        {
                            PermissionId = new Guid("23b162c5-7b85-44b4-be86-b46d7fa3be0b"),
                            UserId = new Guid("90a32d8e-de43-47b7-9968-3805cc5abf6c")
                        },
                        new
                        {
                            PermissionId = new Guid("afc68adc-941f-4ed2-bd49-8c1da98e00b3"),
                            UserId = new Guid("90a32d8e-de43-47b7-9968-3805cc5abf6c")
                        },
                        new
                        {
                            PermissionId = new Guid("b1186ef5-6ba9-4818-b724-1cdb58f933ef"),
                            UserId = new Guid("90a32d8e-de43-47b7-9968-3805cc5abf6c")
                        },
                        new
                        {
                            PermissionId = new Guid("77da324b-dd05-4c82-bc40-b574d43dc47c"),
                            UserId = new Guid("90a32d8e-de43-47b7-9968-3805cc5abf6c")
                        },
                        new
                        {
                            PermissionId = new Guid("fbaf28f1-30ee-4331-9b9a-8035fcabea75"),
                            UserId = new Guid("90a32d8e-de43-47b7-9968-3805cc5abf6c")
                        },
                        new
                        {
                            PermissionId = new Guid("fe5025a4-b6b6-4b26-b421-3626ead715c3"),
                            UserId = new Guid("90a32d8e-de43-47b7-9968-3805cc5abf6c")
                        },
                        new
                        {
                            PermissionId = new Guid("e664aec4-5252-4af7-b087-121c96cc12d7"),
                            UserId = new Guid("90a32d8e-de43-47b7-9968-3805cc5abf6c")
                        },
                        new
                        {
                            PermissionId = new Guid("ba998e50-29cc-4039-b8c7-02ccd243af26"),
                            UserId = new Guid("90a32d8e-de43-47b7-9968-3805cc5abf6c")
                        },
                        new
                        {
                            PermissionId = new Guid("69e4f819-a5ca-41fd-8775-50d689506332"),
                            UserId = new Guid("90a32d8e-de43-47b7-9968-3805cc5abf6c")
                        },
                        new
                        {
                            PermissionId = new Guid("d15509ee-a5a9-4130-aaf0-b1e8c0ee467d"),
                            UserId = new Guid("d3034edf-f2f2-4311-aec2-290a56dc94b7")
                        },
                        new
                        {
                            PermissionId = new Guid("23b162c5-7b85-44b4-be86-b46d7fa3be0b"),
                            UserId = new Guid("d3034edf-f2f2-4311-aec2-290a56dc94b7")
                        },
                        new
                        {
                            PermissionId = new Guid("afc68adc-941f-4ed2-bd49-8c1da98e00b3"),
                            UserId = new Guid("d3034edf-f2f2-4311-aec2-290a56dc94b7")
                        },
                        new
                        {
                            PermissionId = new Guid("b1186ef5-6ba9-4818-b724-1cdb58f933ef"),
                            UserId = new Guid("d3034edf-f2f2-4311-aec2-290a56dc94b7")
                        },
                        new
                        {
                            PermissionId = new Guid("77da324b-dd05-4c82-bc40-b574d43dc47c"),
                            UserId = new Guid("d3034edf-f2f2-4311-aec2-290a56dc94b7")
                        },
                        new
                        {
                            PermissionId = new Guid("fbaf28f1-30ee-4331-9b9a-8035fcabea75"),
                            UserId = new Guid("d3034edf-f2f2-4311-aec2-290a56dc94b7")
                        },
                        new
                        {
                            PermissionId = new Guid("fe5025a4-b6b6-4b26-b421-3626ead715c3"),
                            UserId = new Guid("d3034edf-f2f2-4311-aec2-290a56dc94b7")
                        },
                        new
                        {
                            PermissionId = new Guid("e664aec4-5252-4af7-b087-121c96cc12d7"),
                            UserId = new Guid("d3034edf-f2f2-4311-aec2-290a56dc94b7")
                        },
                        new
                        {
                            PermissionId = new Guid("ba998e50-29cc-4039-b8c7-02ccd243af26"),
                            UserId = new Guid("d3034edf-f2f2-4311-aec2-290a56dc94b7")
                        },
                        new
                        {
                            PermissionId = new Guid("69e4f819-a5ca-41fd-8775-50d689506332"),
                            UserId = new Guid("d3034edf-f2f2-4311-aec2-290a56dc94b7")
                        },
                        new
                        {
                            PermissionId = new Guid("fd0a6608-dbc7-47ab-b9d9-b446ab08631a"),
                            UserId = new Guid("a606a1bd-40eb-4e15-abea-a3d346380288")
                        },
                        new
                        {
                            PermissionId = new Guid("a3ff8ff2-a2e6-459f-9f9e-18642f2a5404"),
                            UserId = new Guid("a606a1bd-40eb-4e15-abea-a3d346380288")
                        },
                        new
                        {
                            PermissionId = new Guid("06629fc9-d121-4586-bf95-21886f045df1"),
                            UserId = new Guid("a606a1bd-40eb-4e15-abea-a3d346380288")
                        },
                        new
                        {
                            PermissionId = new Guid("1917ea15-d762-4277-b13a-980a476b1991"),
                            UserId = new Guid("a606a1bd-40eb-4e15-abea-a3d346380288")
                        },
                        new
                        {
                            PermissionId = new Guid("108c76c1-f352-451a-8464-269053d2d5c5"),
                            UserId = new Guid("a606a1bd-40eb-4e15-abea-a3d346380288")
                        },
                        new
                        {
                            PermissionId = new Guid("c05802c7-41da-4d94-a468-0997cfb59f0f"),
                            UserId = new Guid("a606a1bd-40eb-4e15-abea-a3d346380288")
                        },
                        new
                        {
                            PermissionId = new Guid("fcb3880e-acc2-45d6-89d9-596968611764"),
                            UserId = new Guid("cadce08d-3e77-469d-baeb-40f5c5f0fd74")
                        },
                        new
                        {
                            PermissionId = new Guid("5b6f2650-04dc-444a-a212-813a57aaea18"),
                            UserId = new Guid("cadce08d-3e77-469d-baeb-40f5c5f0fd74")
                        },
                        new
                        {
                            PermissionId = new Guid("71dd38b8-efab-44b6-b6f7-5572db7ae8b5"),
                            UserId = new Guid("cadce08d-3e77-469d-baeb-40f5c5f0fd74")
                        },
                        new
                        {
                            PermissionId = new Guid("ac9ee154-c6c4-4765-a7dd-168d51d96526"),
                            UserId = new Guid("cadce08d-3e77-469d-baeb-40f5c5f0fd74")
                        },
                        new
                        {
                            PermissionId = new Guid("52376afd-eb8a-4bd0-9278-d0a6b1c4f164"),
                            UserId = new Guid("cadce08d-3e77-469d-baeb-40f5c5f0fd74")
                        },
                        new
                        {
                            PermissionId = new Guid("6cebc42e-d5f8-44ca-b621-8ecc2b624e73"),
                            UserId = new Guid("cadce08d-3e77-469d-baeb-40f5c5f0fd74")
                        });
                });

            modelBuilder.Entity("Domain.SecurityCam", b =>
                {
                    b.HasBaseType("Domain.Device");

                    b.Property<string>("CamSupportedActionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CamSupportedActionsJson");

                    b.Property<string>("UseTypeJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UseTypeJson");

                    b.HasDiscriminator().HasValue("SecurityCam");
                });

            modelBuilder.Entity("Domain.SmartLampHardware", b =>
                {
                    b.HasBaseType("Domain.Hardware");

                    b.Property<bool>("IsOn")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("SmartLamp");
                });

            modelBuilder.Entity("Domain.WindowSensorHardware", b =>
                {
                    b.HasBaseType("Domain.Hardware");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("WindowSensor");
                });

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.HasOne("Domain.User", "Owner")
                        .WithOne()
                        .HasForeignKey("Domain.Company", "OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Domain.Device", b =>
                {
                    b.HasOne("Domain.Company", "Company")
                        .WithMany("Devices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Domain.Hardware", b =>
                {
                    b.HasOne("Domain.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Home", "Home")
                        .WithMany("Devices")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Home");
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.HasOne("Domain.User", "Owner")
                        .WithMany("OwnedHomes")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Domain.UbicationGeo", "Ubication", b1 =>
                        {
                            b1.Property<Guid>("HomeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("Lat")
                                .HasColumnType("int");

                            b1.Property<int?>("Lon")
                                .HasColumnType("int");

                            b1.HasKey("HomeId");

                            b1.ToTable("Homes");

                            b1.WithOwner()
                                .HasForeignKey("HomeId");
                        });

                    b.Navigation("Owner");

                    b.Navigation("Ubication")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Notification", b =>
                {
                    b.HasOne("Domain.Hardware", "Hardware")
                        .WithMany()
                        .HasForeignKey("HardwareId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hardware");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.NotificationMember", b =>
                {
                    b.HasOne("Domain.Home", "Home")
                        .WithMany("NotificationMembers")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.SessionUser", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserHomePermission", b =>
                {
                    b.HasOne("Domain.Home", "Home")
                        .WithMany("Members")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("HomePermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserPermissions", b =>
                {
                    b.HasOne("Domain.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Members");

                    b.Navigation("NotificationMembers");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Navigation("HomePermissions");

                    b.Navigation("OwnedHomes");
                });
#pragma warning restore 612, 618
        }
    }
}
