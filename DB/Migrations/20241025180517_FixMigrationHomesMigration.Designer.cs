// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHub.DB;

#nullable disable

namespace SmartHub.DB.Migrations
{
    [DbContext(typeof(SmartHubAPIContext))]
    [Migration("20241025180517_FixMigrationHomesMigration")]
    partial class FixMigrationHomesMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LogoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Domain.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotosJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Devices", (string)null);

                    b.HasDiscriminator<string>("DeviceType").HasValue("Device");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Hardware", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HardwareType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("HomeId");

                    b.ToTable("Hardwares", (string)null);

                    b.HasDiscriminator<string>("HardwareType").HasValue("Hardware");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("Domain.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HardwareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Seen")
                        .HasColumnType("bit");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HardwareId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.NotificationMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationMembers");
                });

            modelBuilder.Entity("Domain.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eb51f52e-83a4-4b67-98ef-499b43d64ca0"),
                            Name = "getnotifications-notification"
                        },
                        new
                        {
                            Id = new Guid("9aaeefff-83bd-4342-8982-aece678c5a6a"),
                            Name = "open-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("16372418-2534-4e27-bd7f-6a7288f7cfb2"),
                            Name = "close-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("0030e40c-c138-4a19-9181-77c96a700b3e"),
                            Name = "motiondetection-camera"
                        },
                        new
                        {
                            Id = new Guid("63155c52-d5ad-4ef9-9935-8b7365b90385"),
                            Name = "persondetection-camera"
                        },
                        new
                        {
                            Id = new Guid("546b7c89-7413-43a5-96c9-5e1071992947"),
                            Name = "getdevices-devices"
                        },
                        new
                        {
                            Id = new Guid("d876adf4-2d7c-424a-9e54-48ee8a4d4b07"),
                            Name = "getdevicetypes-devicetype"
                        },
                        new
                        {
                            Id = new Guid("a684fb37-aee7-4157-8304-b6626d8dba30"),
                            Name = "motiondetection-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("3442bc30-8d88-4c6e-9fcb-86cb231082fd"),
                            Name = "on-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("cedf65fa-1f00-430f-bdeb-059b476f29af"),
                            Name = "off-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("e43a5938-6ed2-4967-a5d0-52e7ae2b6252"),
                            Name = "createcompany-companies"
                        },
                        new
                        {
                            Id = new Guid("b0ecbadc-e38e-43ca-b064-892ed2790e26"),
                            Name = "addsensor-windowsensor"
                        },
                        new
                        {
                            Id = new Guid("092746b5-edaf-43a1-b543-a3f16e93626e"),
                            Name = "addmotionsensor-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("32f9293e-087c-42f5-9e9b-258bc8216ce4"),
                            Name = "addcamera-camera"
                        },
                        new
                        {
                            Id = new Guid("b88f20ec-d886-4af0-885c-5d78aeb24373"),
                            Name = "addhomeownerpermission-homeowner"
                        },
                        new
                        {
                            Id = new Guid("3c69a52c-0a45-4da1-9898-94f3b8d7220e"),
                            Name = "addsmartlamp-smartlamp"
                        },
                        new
                        {
                            Id = new Guid("119b959b-5643-45a2-9a6d-8f6606f61df0"),
                            Name = "createadminaccount-administrator"
                        },
                        new
                        {
                            Id = new Guid("8357b55d-20b3-4566-a41d-4f6957549702"),
                            Name = "deleteadminaccount-administrator"
                        },
                        new
                        {
                            Id = new Guid("03c54dd2-7534-4c0d-97b7-d86a3f75bf76"),
                            Name = "createcompanyowneraccount-companyowner"
                        },
                        new
                        {
                            Id = new Guid("c558e4ba-5d99-4bc9-b55e-c82c53792253"),
                            Name = "getaccounts-accounts"
                        },
                        new
                        {
                            Id = new Guid("39a3c9f2-2c34-4a45-bf57-98f980fa7a80"),
                            Name = "getcompany-companies"
                        },
                        new
                        {
                            Id = new Guid("d8be9808-734d-40a6-a377-a27f56c1eecb"),
                            Name = "addhomeownerpermission-homeowner"
                        },
                        new
                        {
                            Id = new Guid("5fbf9614-8c44-412b-9693-df32e6e44723"),
                            Name = "newhome-home"
                        },
                        new
                        {
                            Id = new Guid("7108ebdc-d8ae-4705-9e30-670bddfea383"),
                            Name = "addmember-members"
                        },
                        new
                        {
                            Id = new Guid("561b4d2e-f9cd-42d3-8407-48d8d693ee57"),
                            Name = "adddevice-home"
                        },
                        new
                        {
                            Id = new Guid("008e8016-3edc-4439-9036-5aea63a622f3"),
                            Name = "getmembers-members"
                        },
                        new
                        {
                            Id = new Guid("1f37e047-599b-485c-b1e1-d8cdaa695232"),
                            Name = "getdevices-home"
                        },
                        new
                        {
                            Id = new Guid("6822f66a-0e21-4cd4-9265-9419b990a75a"),
                            Name = "addnotificationmembers-members"
                        },
                        new
                        {
                            Id = new Guid("f4ee80cf-83e7-4d51-8212-4c252936d0e8"),
                            Name = "updatenamedevice-home"
                        },
                        new
                        {
                            Id = new Guid("f6f6a3cd-ac08-4f82-ac3d-3f77cd1eb0a0"),
                            Name = "addmotionsensor-motionsensor"
                        },
                        new
                        {
                            Id = new Guid("706c3caf-499f-44b9-92a8-ef0af92f8005"),
                            Name = "gethomes-user"
                        },
                        new
                        {
                            Id = new Guid("1d95fbcf-d6a4-4186-97a4-cd9e7e340b0f"),
                            Name = "addpermission-members"
                        });
                });

            modelBuilder.Entity("Domain.SessionUser", b =>
                {
                    b.Property<Guid>("Token")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Token");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e091684d-d6cf-4be9-bcf9-5cff1cb108a3"),
                            CreatedAt = new DateTime(2024, 10, 25, 15, 5, 17, 32, DateTimeKind.Local).AddTicks(6659),
                            Email = "rogerfederer@tennis.com",
                            Name = "Roger",
                            Password = "Federer@123",
                            ProfilePhoto = "federer.jpg",
                            Roles = "[0]",
                            Surname = "Federer"
                        },
                        new
                        {
                            Id = new Guid("027743d7-bc4f-4c5d-b1e4-331114e797ee"),
                            CreatedAt = new DateTime(2024, 10, 25, 15, 5, 17, 32, DateTimeKind.Local).AddTicks(6686),
                            Email = "rafaelnadal@tennis.com",
                            Name = "Rafael",
                            Password = "Nadal@123",
                            ProfilePhoto = "nadal.jpg",
                            Roles = "[0]",
                            Surname = "Nadal"
                        },
                        new
                        {
                            Id = new Guid("29cd95bc-9090-463c-817a-c471fbb5a525"),
                            CreatedAt = new DateTime(2024, 10, 25, 15, 5, 17, 32, DateTimeKind.Local).AddTicks(6690),
                            Email = "serenawilliams@tennis.com",
                            Name = "Serena",
                            Password = "Serena@123",
                            ProfilePhoto = "serena.jpg",
                            Roles = "[2]",
                            Surname = "Williams"
                        },
                        new
                        {
                            Id = new Guid("8776c602-600e-4750-a501-7e7557165ece"),
                            CreatedAt = new DateTime(2024, 10, 25, 15, 5, 17, 32, DateTimeKind.Local).AddTicks(6694),
                            Email = "novakdjokovic@tennis.com",
                            Name = "Novak",
                            Password = "Djokovic@123",
                            ProfilePhoto = "djokovic.jpg",
                            Roles = "[2,1]",
                            Surname = "Djokovic"
                        },
                        new
                        {
                            Id = new Guid("98b52fce-f8e4-431c-88b0-8c7e136dbfc5"),
                            CreatedAt = new DateTime(2024, 10, 25, 15, 5, 17, 32, DateTimeKind.Local).AddTicks(6697),
                            Email = "steffigraf@tennis.com",
                            Name = "Steffi",
                            Password = "Steffi@123",
                            ProfilePhoto = "graf.jpg",
                            Roles = "[1]",
                            Surname = "Graf"
                        },
                        new
                        {
                            Id = new Guid("e85e659a-9be8-4d12-bbee-3bc9214853f8"),
                            CreatedAt = new DateTime(2024, 10, 25, 15, 5, 17, 32, DateTimeKind.Local).AddTicks(6702),
                            Email = "andreagassi@tennis.com",
                            Name = "Andre",
                            Password = "Agassi@123",
                            ProfilePhoto = "agassi.jpg",
                            Roles = "[1]",
                            Surname = "Agassi"
                        },
                        new
                        {
                            Id = new Guid("74739b4e-3170-4fb5-b9d0-5925342529e4"),
                            CreatedAt = new DateTime(2024, 10, 25, 15, 5, 17, 32, DateTimeKind.Local).AddTicks(6706),
                            Email = "petesampras@tennis.com",
                            Name = "Pete",
                            Password = "Sampras@123",
                            ProfilePhoto = "sampras.jpg",
                            Roles = "[1]",
                            Surname = "Sampras"
                        },
                        new
                        {
                            Id = new Guid("5cfb46e7-eef0-48d7-9fc7-3b0463f5737e"),
                            CreatedAt = new DateTime(2024, 10, 25, 15, 5, 17, 32, DateTimeKind.Local).AddTicks(6710),
                            Email = "martinanavratilova@tennis.com",
                            Name = "Martina",
                            Password = "Navratilova@123",
                            ProfilePhoto = "navratilova.jpg",
                            Roles = "[1]",
                            Surname = "Navratilova"
                        },
                        new
                        {
                            Id = new Guid("ce3741c4-894e-4248-a025-f8224ca21f3c"),
                            CreatedAt = new DateTime(2024, 10, 25, 15, 5, 17, 32, DateTimeKind.Local).AddTicks(6713),
                            Email = "johnmcenroe@tennis.com",
                            Name = "John",
                            Password = "McEnroe@123",
                            ProfilePhoto = "mcenroe.jpg",
                            Roles = "[2]",
                            Surname = "McEnroe"
                        },
                        new
                        {
                            Id = new Guid("dcef6f39-62af-43f2-b358-14b40d5077be"),
                            CreatedAt = new DateTime(2024, 10, 25, 15, 5, 17, 32, DateTimeKind.Local).AddTicks(6719),
                            Email = "billiejeanking@tennis.com",
                            Name = "Billie",
                            Password = "King@123",
                            ProfilePhoto = "king.jpg",
                            Roles = "[0]",
                            Surname = "Jean King"
                        });
                });

            modelBuilder.Entity("Domain.UserHomePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHomePermissions");
                });

            modelBuilder.Entity("Domain.UserPermissions", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions", (string)null);

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("e43a5938-6ed2-4967-a5d0-52e7ae2b6252"),
                            UserId = new Guid("e091684d-d6cf-4be9-bcf9-5cff1cb108a3")
                        },
                        new
                        {
                            PermissionId = new Guid("b0ecbadc-e38e-43ca-b064-892ed2790e26"),
                            UserId = new Guid("e091684d-d6cf-4be9-bcf9-5cff1cb108a3")
                        },
                        new
                        {
                            PermissionId = new Guid("092746b5-edaf-43a1-b543-a3f16e93626e"),
                            UserId = new Guid("e091684d-d6cf-4be9-bcf9-5cff1cb108a3")
                        },
                        new
                        {
                            PermissionId = new Guid("32f9293e-087c-42f5-9e9b-258bc8216ce4"),
                            UserId = new Guid("e091684d-d6cf-4be9-bcf9-5cff1cb108a3")
                        },
                        new
                        {
                            PermissionId = new Guid("b88f20ec-d886-4af0-885c-5d78aeb24373"),
                            UserId = new Guid("e091684d-d6cf-4be9-bcf9-5cff1cb108a3")
                        },
                        new
                        {
                            PermissionId = new Guid("3c69a52c-0a45-4da1-9898-94f3b8d7220e"),
                            UserId = new Guid("e091684d-d6cf-4be9-bcf9-5cff1cb108a3")
                        },
                        new
                        {
                            PermissionId = new Guid("e43a5938-6ed2-4967-a5d0-52e7ae2b6252"),
                            UserId = new Guid("027743d7-bc4f-4c5d-b1e4-331114e797ee")
                        },
                        new
                        {
                            PermissionId = new Guid("b0ecbadc-e38e-43ca-b064-892ed2790e26"),
                            UserId = new Guid("027743d7-bc4f-4c5d-b1e4-331114e797ee")
                        },
                        new
                        {
                            PermissionId = new Guid("092746b5-edaf-43a1-b543-a3f16e93626e"),
                            UserId = new Guid("027743d7-bc4f-4c5d-b1e4-331114e797ee")
                        },
                        new
                        {
                            PermissionId = new Guid("32f9293e-087c-42f5-9e9b-258bc8216ce4"),
                            UserId = new Guid("027743d7-bc4f-4c5d-b1e4-331114e797ee")
                        },
                        new
                        {
                            PermissionId = new Guid("b88f20ec-d886-4af0-885c-5d78aeb24373"),
                            UserId = new Guid("027743d7-bc4f-4c5d-b1e4-331114e797ee")
                        },
                        new
                        {
                            PermissionId = new Guid("3c69a52c-0a45-4da1-9898-94f3b8d7220e"),
                            UserId = new Guid("027743d7-bc4f-4c5d-b1e4-331114e797ee")
                        },
                        new
                        {
                            PermissionId = new Guid("119b959b-5643-45a2-9a6d-8f6606f61df0"),
                            UserId = new Guid("29cd95bc-9090-463c-817a-c471fbb5a525")
                        },
                        new
                        {
                            PermissionId = new Guid("8357b55d-20b3-4566-a41d-4f6957549702"),
                            UserId = new Guid("29cd95bc-9090-463c-817a-c471fbb5a525")
                        },
                        new
                        {
                            PermissionId = new Guid("03c54dd2-7534-4c0d-97b7-d86a3f75bf76"),
                            UserId = new Guid("29cd95bc-9090-463c-817a-c471fbb5a525")
                        },
                        new
                        {
                            PermissionId = new Guid("c558e4ba-5d99-4bc9-b55e-c82c53792253"),
                            UserId = new Guid("29cd95bc-9090-463c-817a-c471fbb5a525")
                        },
                        new
                        {
                            PermissionId = new Guid("39a3c9f2-2c34-4a45-bf57-98f980fa7a80"),
                            UserId = new Guid("29cd95bc-9090-463c-817a-c471fbb5a525")
                        },
                        new
                        {
                            PermissionId = new Guid("d8be9808-734d-40a6-a377-a27f56c1eecb"),
                            UserId = new Guid("29cd95bc-9090-463c-817a-c471fbb5a525")
                        },
                        new
                        {
                            PermissionId = new Guid("119b959b-5643-45a2-9a6d-8f6606f61df0"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("8357b55d-20b3-4566-a41d-4f6957549702"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("03c54dd2-7534-4c0d-97b7-d86a3f75bf76"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("c558e4ba-5d99-4bc9-b55e-c82c53792253"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("39a3c9f2-2c34-4a45-bf57-98f980fa7a80"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("d8be9808-734d-40a6-a377-a27f56c1eecb"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("5fbf9614-8c44-412b-9693-df32e6e44723"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("7108ebdc-d8ae-4705-9e30-670bddfea383"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("561b4d2e-f9cd-42d3-8407-48d8d693ee57"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("008e8016-3edc-4439-9036-5aea63a622f3"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("1f37e047-599b-485c-b1e1-d8cdaa695232"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("6822f66a-0e21-4cd4-9265-9419b990a75a"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("f4ee80cf-83e7-4d51-8212-4c252936d0e8"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("f6f6a3cd-ac08-4f82-ac3d-3f77cd1eb0a0"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("706c3caf-499f-44b9-92a8-ef0af92f8005"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("1d95fbcf-d6a4-4186-97a4-cd9e7e340b0f"),
                            UserId = new Guid("8776c602-600e-4750-a501-7e7557165ece")
                        },
                        new
                        {
                            PermissionId = new Guid("5fbf9614-8c44-412b-9693-df32e6e44723"),
                            UserId = new Guid("98b52fce-f8e4-431c-88b0-8c7e136dbfc5")
                        },
                        new
                        {
                            PermissionId = new Guid("7108ebdc-d8ae-4705-9e30-670bddfea383"),
                            UserId = new Guid("98b52fce-f8e4-431c-88b0-8c7e136dbfc5")
                        },
                        new
                        {
                            PermissionId = new Guid("561b4d2e-f9cd-42d3-8407-48d8d693ee57"),
                            UserId = new Guid("98b52fce-f8e4-431c-88b0-8c7e136dbfc5")
                        },
                        new
                        {
                            PermissionId = new Guid("008e8016-3edc-4439-9036-5aea63a622f3"),
                            UserId = new Guid("98b52fce-f8e4-431c-88b0-8c7e136dbfc5")
                        },
                        new
                        {
                            PermissionId = new Guid("1f37e047-599b-485c-b1e1-d8cdaa695232"),
                            UserId = new Guid("98b52fce-f8e4-431c-88b0-8c7e136dbfc5")
                        },
                        new
                        {
                            PermissionId = new Guid("6822f66a-0e21-4cd4-9265-9419b990a75a"),
                            UserId = new Guid("98b52fce-f8e4-431c-88b0-8c7e136dbfc5")
                        },
                        new
                        {
                            PermissionId = new Guid("f4ee80cf-83e7-4d51-8212-4c252936d0e8"),
                            UserId = new Guid("98b52fce-f8e4-431c-88b0-8c7e136dbfc5")
                        },
                        new
                        {
                            PermissionId = new Guid("f6f6a3cd-ac08-4f82-ac3d-3f77cd1eb0a0"),
                            UserId = new Guid("98b52fce-f8e4-431c-88b0-8c7e136dbfc5")
                        },
                        new
                        {
                            PermissionId = new Guid("706c3caf-499f-44b9-92a8-ef0af92f8005"),
                            UserId = new Guid("98b52fce-f8e4-431c-88b0-8c7e136dbfc5")
                        },
                        new
                        {
                            PermissionId = new Guid("1d95fbcf-d6a4-4186-97a4-cd9e7e340b0f"),
                            UserId = new Guid("98b52fce-f8e4-431c-88b0-8c7e136dbfc5")
                        },
                        new
                        {
                            PermissionId = new Guid("5fbf9614-8c44-412b-9693-df32e6e44723"),
                            UserId = new Guid("e85e659a-9be8-4d12-bbee-3bc9214853f8")
                        },
                        new
                        {
                            PermissionId = new Guid("7108ebdc-d8ae-4705-9e30-670bddfea383"),
                            UserId = new Guid("e85e659a-9be8-4d12-bbee-3bc9214853f8")
                        },
                        new
                        {
                            PermissionId = new Guid("561b4d2e-f9cd-42d3-8407-48d8d693ee57"),
                            UserId = new Guid("e85e659a-9be8-4d12-bbee-3bc9214853f8")
                        },
                        new
                        {
                            PermissionId = new Guid("008e8016-3edc-4439-9036-5aea63a622f3"),
                            UserId = new Guid("e85e659a-9be8-4d12-bbee-3bc9214853f8")
                        },
                        new
                        {
                            PermissionId = new Guid("1f37e047-599b-485c-b1e1-d8cdaa695232"),
                            UserId = new Guid("e85e659a-9be8-4d12-bbee-3bc9214853f8")
                        },
                        new
                        {
                            PermissionId = new Guid("6822f66a-0e21-4cd4-9265-9419b990a75a"),
                            UserId = new Guid("e85e659a-9be8-4d12-bbee-3bc9214853f8")
                        },
                        new
                        {
                            PermissionId = new Guid("f4ee80cf-83e7-4d51-8212-4c252936d0e8"),
                            UserId = new Guid("e85e659a-9be8-4d12-bbee-3bc9214853f8")
                        },
                        new
                        {
                            PermissionId = new Guid("f6f6a3cd-ac08-4f82-ac3d-3f77cd1eb0a0"),
                            UserId = new Guid("e85e659a-9be8-4d12-bbee-3bc9214853f8")
                        },
                        new
                        {
                            PermissionId = new Guid("706c3caf-499f-44b9-92a8-ef0af92f8005"),
                            UserId = new Guid("e85e659a-9be8-4d12-bbee-3bc9214853f8")
                        },
                        new
                        {
                            PermissionId = new Guid("1d95fbcf-d6a4-4186-97a4-cd9e7e340b0f"),
                            UserId = new Guid("e85e659a-9be8-4d12-bbee-3bc9214853f8")
                        },
                        new
                        {
                            PermissionId = new Guid("5fbf9614-8c44-412b-9693-df32e6e44723"),
                            UserId = new Guid("74739b4e-3170-4fb5-b9d0-5925342529e4")
                        },
                        new
                        {
                            PermissionId = new Guid("7108ebdc-d8ae-4705-9e30-670bddfea383"),
                            UserId = new Guid("74739b4e-3170-4fb5-b9d0-5925342529e4")
                        },
                        new
                        {
                            PermissionId = new Guid("561b4d2e-f9cd-42d3-8407-48d8d693ee57"),
                            UserId = new Guid("74739b4e-3170-4fb5-b9d0-5925342529e4")
                        },
                        new
                        {
                            PermissionId = new Guid("008e8016-3edc-4439-9036-5aea63a622f3"),
                            UserId = new Guid("74739b4e-3170-4fb5-b9d0-5925342529e4")
                        },
                        new
                        {
                            PermissionId = new Guid("1f37e047-599b-485c-b1e1-d8cdaa695232"),
                            UserId = new Guid("74739b4e-3170-4fb5-b9d0-5925342529e4")
                        },
                        new
                        {
                            PermissionId = new Guid("6822f66a-0e21-4cd4-9265-9419b990a75a"),
                            UserId = new Guid("74739b4e-3170-4fb5-b9d0-5925342529e4")
                        },
                        new
                        {
                            PermissionId = new Guid("f4ee80cf-83e7-4d51-8212-4c252936d0e8"),
                            UserId = new Guid("74739b4e-3170-4fb5-b9d0-5925342529e4")
                        },
                        new
                        {
                            PermissionId = new Guid("f6f6a3cd-ac08-4f82-ac3d-3f77cd1eb0a0"),
                            UserId = new Guid("74739b4e-3170-4fb5-b9d0-5925342529e4")
                        },
                        new
                        {
                            PermissionId = new Guid("706c3caf-499f-44b9-92a8-ef0af92f8005"),
                            UserId = new Guid("74739b4e-3170-4fb5-b9d0-5925342529e4")
                        },
                        new
                        {
                            PermissionId = new Guid("1d95fbcf-d6a4-4186-97a4-cd9e7e340b0f"),
                            UserId = new Guid("74739b4e-3170-4fb5-b9d0-5925342529e4")
                        },
                        new
                        {
                            PermissionId = new Guid("5fbf9614-8c44-412b-9693-df32e6e44723"),
                            UserId = new Guid("5cfb46e7-eef0-48d7-9fc7-3b0463f5737e")
                        },
                        new
                        {
                            PermissionId = new Guid("7108ebdc-d8ae-4705-9e30-670bddfea383"),
                            UserId = new Guid("5cfb46e7-eef0-48d7-9fc7-3b0463f5737e")
                        },
                        new
                        {
                            PermissionId = new Guid("561b4d2e-f9cd-42d3-8407-48d8d693ee57"),
                            UserId = new Guid("5cfb46e7-eef0-48d7-9fc7-3b0463f5737e")
                        },
                        new
                        {
                            PermissionId = new Guid("008e8016-3edc-4439-9036-5aea63a622f3"),
                            UserId = new Guid("5cfb46e7-eef0-48d7-9fc7-3b0463f5737e")
                        },
                        new
                        {
                            PermissionId = new Guid("1f37e047-599b-485c-b1e1-d8cdaa695232"),
                            UserId = new Guid("5cfb46e7-eef0-48d7-9fc7-3b0463f5737e")
                        },
                        new
                        {
                            PermissionId = new Guid("6822f66a-0e21-4cd4-9265-9419b990a75a"),
                            UserId = new Guid("5cfb46e7-eef0-48d7-9fc7-3b0463f5737e")
                        },
                        new
                        {
                            PermissionId = new Guid("f4ee80cf-83e7-4d51-8212-4c252936d0e8"),
                            UserId = new Guid("5cfb46e7-eef0-48d7-9fc7-3b0463f5737e")
                        },
                        new
                        {
                            PermissionId = new Guid("f6f6a3cd-ac08-4f82-ac3d-3f77cd1eb0a0"),
                            UserId = new Guid("5cfb46e7-eef0-48d7-9fc7-3b0463f5737e")
                        },
                        new
                        {
                            PermissionId = new Guid("706c3caf-499f-44b9-92a8-ef0af92f8005"),
                            UserId = new Guid("5cfb46e7-eef0-48d7-9fc7-3b0463f5737e")
                        },
                        new
                        {
                            PermissionId = new Guid("1d95fbcf-d6a4-4186-97a4-cd9e7e340b0f"),
                            UserId = new Guid("5cfb46e7-eef0-48d7-9fc7-3b0463f5737e")
                        },
                        new
                        {
                            PermissionId = new Guid("119b959b-5643-45a2-9a6d-8f6606f61df0"),
                            UserId = new Guid("ce3741c4-894e-4248-a025-f8224ca21f3c")
                        },
                        new
                        {
                            PermissionId = new Guid("8357b55d-20b3-4566-a41d-4f6957549702"),
                            UserId = new Guid("ce3741c4-894e-4248-a025-f8224ca21f3c")
                        },
                        new
                        {
                            PermissionId = new Guid("03c54dd2-7534-4c0d-97b7-d86a3f75bf76"),
                            UserId = new Guid("ce3741c4-894e-4248-a025-f8224ca21f3c")
                        },
                        new
                        {
                            PermissionId = new Guid("c558e4ba-5d99-4bc9-b55e-c82c53792253"),
                            UserId = new Guid("ce3741c4-894e-4248-a025-f8224ca21f3c")
                        },
                        new
                        {
                            PermissionId = new Guid("39a3c9f2-2c34-4a45-bf57-98f980fa7a80"),
                            UserId = new Guid("ce3741c4-894e-4248-a025-f8224ca21f3c")
                        },
                        new
                        {
                            PermissionId = new Guid("d8be9808-734d-40a6-a377-a27f56c1eecb"),
                            UserId = new Guid("ce3741c4-894e-4248-a025-f8224ca21f3c")
                        },
                        new
                        {
                            PermissionId = new Guid("e43a5938-6ed2-4967-a5d0-52e7ae2b6252"),
                            UserId = new Guid("dcef6f39-62af-43f2-b358-14b40d5077be")
                        },
                        new
                        {
                            PermissionId = new Guid("b0ecbadc-e38e-43ca-b064-892ed2790e26"),
                            UserId = new Guid("dcef6f39-62af-43f2-b358-14b40d5077be")
                        },
                        new
                        {
                            PermissionId = new Guid("092746b5-edaf-43a1-b543-a3f16e93626e"),
                            UserId = new Guid("dcef6f39-62af-43f2-b358-14b40d5077be")
                        },
                        new
                        {
                            PermissionId = new Guid("32f9293e-087c-42f5-9e9b-258bc8216ce4"),
                            UserId = new Guid("dcef6f39-62af-43f2-b358-14b40d5077be")
                        },
                        new
                        {
                            PermissionId = new Guid("b88f20ec-d886-4af0-885c-5d78aeb24373"),
                            UserId = new Guid("dcef6f39-62af-43f2-b358-14b40d5077be")
                        },
                        new
                        {
                            PermissionId = new Guid("3c69a52c-0a45-4da1-9898-94f3b8d7220e"),
                            UserId = new Guid("dcef6f39-62af-43f2-b358-14b40d5077be")
                        });
                });

            modelBuilder.Entity("Domain.SecurityCam", b =>
                {
                    b.HasBaseType("Domain.Device");

                    b.Property<string>("CamSupportedActionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CamSupportedActionsJson");

                    b.Property<string>("UseTypeJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UseTypeJson");

                    b.HasDiscriminator().HasValue("SecurityCam");
                });

            modelBuilder.Entity("Domain.SmartLampHardware", b =>
                {
                    b.HasBaseType("Domain.Hardware");

                    b.Property<bool>("IsOn")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("SmartLamp");
                });

            modelBuilder.Entity("Domain.WindowSensorHardware", b =>
                {
                    b.HasBaseType("Domain.Hardware");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("WindowSensor");
                });

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.HasOne("Domain.User", "Owner")
                        .WithOne()
                        .HasForeignKey("Domain.Company", "OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Domain.Device", b =>
                {
                    b.HasOne("Domain.Company", "Company")
                        .WithMany("Devices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Domain.Hardware", b =>
                {
                    b.HasOne("Domain.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Home", "Home")
                        .WithMany("Devices")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Home");
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.HasOne("Domain.User", "Owner")
                        .WithMany("OwnedHomes")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Domain.UbicationGeo", "Ubication", b1 =>
                        {
                            b1.Property<Guid>("HomeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("Lat")
                                .HasColumnType("int");

                            b1.Property<int?>("Lon")
                                .HasColumnType("int");

                            b1.HasKey("HomeId");

                            b1.ToTable("Homes");

                            b1.WithOwner()
                                .HasForeignKey("HomeId");
                        });

                    b.Navigation("Owner");

                    b.Navigation("Ubication")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Notification", b =>
                {
                    b.HasOne("Domain.Hardware", "Hardware")
                        .WithMany()
                        .HasForeignKey("HardwareId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hardware");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.NotificationMember", b =>
                {
                    b.HasOne("Domain.Home", "Home")
                        .WithMany("NotificationMembers")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.SessionUser", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserHomePermission", b =>
                {
                    b.HasOne("Domain.Home", "Home")
                        .WithMany("Members")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("HomePermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.UserPermissions", b =>
                {
                    b.HasOne("Domain.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Company", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Domain.Home", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Members");

                    b.Navigation("NotificationMembers");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Navigation("HomePermissions");

                    b.Navigation("OwnedHomes");
                });
#pragma warning restore 612, 618
        }
    }
}
